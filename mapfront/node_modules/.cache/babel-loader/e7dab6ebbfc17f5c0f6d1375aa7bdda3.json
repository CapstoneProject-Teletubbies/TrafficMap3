{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\src\\\\pages\\\\Main.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport '../css/Main.css';\nimport SearchBar from \"../components/SearchBar\";\nimport SideBar from \"../components/ElevatorAndStair\";\nimport Button from \"../components/Button\";\nimport getLocation from '../getLocation';\nimport plus from \"../images/plus.png\";\nimport plussign from \"../images/plussign.png\";\nimport minus from \"../images/minus.png\";\nimport minussign from \"../images/minussign.png\";\nimport target from \"../images/location.png\";\nimport mytarget from \"../images/target.png\";\nimport nav from \"../images/nav.png\";\nimport stairs from \"../images/stairs.png\";\nimport elevator from \"../images/elevator.png\";\nimport charging from \"../images/charging_station_icon.png\";\nimport mylocation from \"../images/mylocation.png\";\nvar baseurl = 'http://localhost:9000/'; //베이스 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nfunction Main() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyword = _useState2[0],\n      setKeyword = _useState2[1]; //검색 받은 키워드\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      plusbutton = _useState4[0],\n      setPlusButton = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      minusbutton = _useState6[0],\n      setMinusButton = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locationbutton = _useState8[0],\n      setLocationButton = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var locationWatchId = useRef(null);\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      checkedList = _useState14[0],\n      setCheckedList = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      checked = _useState16[0],\n      setChecked = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      wheelchecked = _useState18[0],\n      setWheelChecked = _useState18[1];\n\n  var onCheckedElement = function onCheckedElement(checked, item) {\n    if (checked) {\n      console.log(\"체크\");\n      setCheckedList([].concat(_toConsumableArray(checkedList), [item]));\n      setChecked(true);\n    } else if (!checked) {\n      console.log(\"체크 안돼있음\");\n      setCheckedList(checkedList.filter(function (el) {\n        return el !== item;\n      }));\n      setChecked(false);\n    }\n  };\n\n  var onCheckedWheel = function onCheckedWheel(wheelchecked, item) {\n    if (wheelchecked) {\n      console.log(\"휠체어~체크\");\n      setWheelChecked(true);\n    } else if (!wheelchecked) {\n      console.log(\"휠체어 노체크~\");\n      setWheelChecked(false);\n    }\n  };\n\n  var onRemove = function onRemove(item) {\n    setCheckedList(checkedList.filter(function (el) {\n      return el !== item;\n    }));\n  };\n\n  var LIST = [{\n    id: 0,\n    data: '엘리베이터',\n    src: elevator,\n    cid: \"chk1\"\n  }, {\n    id: 1,\n    data: '계단',\n    src: stairs,\n    cid: \"chk2\"\n  }];\n  var navigate = useNavigate();\n  var outsideRef = useRef(null);\n  useOutsideClick(outsideRef);\n\n  var handlePlusButton = function handlePlusButton() {\n    //확대버튼\n    setPlusButton(true);\n  };\n\n  var handleMinusButton = function handleMinusButton() {\n    //축소버튼\n    setMinusButton(true);\n  };\n\n  var handleLocationButton = function handleLocationButton() {\n    //내위치이동 버튼\n    setLocationButton(true);\n  };\n\n  var handleNavButton = function handleNavButton() {\n    //길찾기 버튼\n    console.log(\"길찾기 버튼 클릭\");\n    reverseGeocoding(location.latitude, location.longitude);\n  };\n\n  var handleSuccess = function handleSuccess(pos) {\n    //내 위치 찾기\n    var _pos$coords = pos.coords,\n        latitude = _pos$coords.latitude,\n        longitude = _pos$coords.longitude;\n    console.log(latitude, longitude);\n    setLocation({\n      latitude: latitude,\n      longitude: longitude\n    });\n  };\n\n  var handleError = function handleError(error) {\n    setError(error.message);\n  };\n\n  var reverseGeocoding = function reverseGeocoding(lat, lon) {\n    var rG = axios.create({\n      baseURL: baseurl\n    });\n    rG.post('/api/find/reverseGeo', null, {\n      params: {\n        lat: lat,\n        lon: lon\n      }\n    }).then(function (res) {\n      navigate('/find-way', {\n        state: {\n          mylocation: location,\n          mystartlocation: res.data\n        }\n      });\n    }).catch(function (err) {\n      console.log(\"지오코딩 실패\");\n    });\n  };\n\n  var getStair = function getStair() {\n    //전체 계단 받아옴\n    var getstair = axios.create({\n      baseURL: baseurl\n    });\n    getstair.post('/api/find/stair').then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      console.log(\"계단 정보 못받아옴\");\n    });\n  };\n\n  var getElevator = function getElevator() {//전체 엘리베이터 받아옴\n  }; // const handleError= (error) -> {\n  //   setError(error.message);\n  // };\n\n\n  var handleKeyword = function handleKeyword(e) {\n    return setKeyword(e.target.value);\n  };\n\n  function useOutsideClick(ref) {\n    //클릭이벤트\n    useEffect(function () {\n      console.log(\"useEffect()\");\n\n      function handleClickOutside(event) {\n        setTimeout(function () {\n          // console.log(ref);\n          if (ref.current && !ref.current.contains(event.target)) {\n            var mytest = document.getElementById('test');\n            console.log(\"select\\uC758 \\uC678\\uBD80 \\uD074\\uB9AD\\uC744 \\uAC10\\uC9C0!\");\n            console.log(mytest.innerText);\n          }\n        }, 100);\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return function () {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\n  function setScreenSize() {\n    var vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", \"\".concat(vh, \"px\"));\n  }\n\n  useEffect(function () {\n    navigator.geolocation.watchPosition(handleSuccess); // setInterval(()=>{\n    //   navigator.geolocation.watchPosition(handleSuccess);\n    //   console.log(\"3초에 한번~\");\n    // }, 3000);\n    // navigator.geolocation.watchPosition(handleSuccess);\n  }, []);\n  useEffect(function () {\n    var zoomin;\n    var zoomout;\n    var movelocation;\n    console.log(checkedList);\n    setScreenSize();\n\n    if (location) {\n      var lat = location.latitude;\n      var lng = location.longitude;\n    }\n\n    if (plusbutton === true) {\n      zoomin = true;\n      setPlusButton(false);\n    } else {\n      zoomin = false;\n    }\n\n    if (minusbutton === true) {\n      zoomout = true;\n      setMinusButton(false);\n    } else {\n      zoomout = false;\n    }\n\n    if (locationbutton === true) {\n      movelocation = true;\n      setLocationButton(false);\n    } else {\n      movelocation = false;\n    }\n\n    var script = document.createElement(\"script\");\n    script.innerHTML = \" \\n        var testmap;\\n        var zoomIn;\\n        var marker, markerCluster;\\n        var elevatormks;\\n\\n        var latlon;\\n\\n        if(!latlon){\\n          latlon = [{lat: 37.44738908, lon: 126.7306811}, {lat: 37.44765055, lon: 126.7124925}, {lat: 37.45611315, lon: 126.7133538}, {lat: 37.46398002, lon: 126.710947}, {lat: 37.46611111, lon: 126.714686}, {lat: 37.467324, lon: 126.699152},\\n                    {lat: 37.4613873, lon: 126.7311568}, {lat: 37.43588036, lon: 126.7473614}, {lat: 37.42791756, lon: 126.7507057}, {lat: 37.43010131, lon: 126.7159454}, {lat: 37.40422829, lon: 126.7163979}, {lat: 37.39776762, lon: 126.7263901},\\n                    {lat: 37.44789883, lon: 126.7370578}, {lat: 37.39176155, lon: 126.7217373}, {lat: 37.42468926, lon: 126.7533209}, {lat: 37.45514557, lon: 126.701585}, {lat: 37.44854249, lon: 126.7530631}, {lat: 37.45587968, lon: 126.7195142},\\n                    {lat: 37.4574194, lon: 126.7023421}, {lat: 37.45688086, lon: 126.7013016}, {lat: 37.46964954, lon: 126.7081713}, {lat: 37.44944591, lon: 126.7011633}, {lat: 37.45678003, lon: 126.7104966}, {lat: 37.45521033, lon: 126.7315437},\\n                    {lat: 37.44817192, lon: 126.7366364}, {lat: 37.43963366, lon: 126.7598083}, \\n                    {lat: 37.53264131, lon: 126.6441471}, {lat: 37.52641513, lon: 126.6705158}, {lat: 37.56441872, lon: 126.673601}, {lat: 37.54899846, lon: 126.6782282}, {lat: 37.53265854, lon: 126.6537394}, {lat: 37.52509167, lon: 126.6801348}, \\n                    {lat: 37.51554696, lon: 126.6778363}, {lat: 37.51460915, lon: 126.6722848}, {lat: 37.51118138, lon: 126.6747559}, {lat: 37.50250466, lon: 126.6746007}, {lat: 37.50820266, lon: 126.6782976}, {lat: 37.49434393, lon: 126.672588},\\n                    {lat: 37.49085455, lon: 126.6848496}, {lat: 37.49250983, lon: 126.6800417}, {lat: 37.48748624, lon: 126.683403}, {lat: 37.60508357, lon: 126.6618003}, {lat: 37.59507709, lon: 126.7017045}, {lat: 37.59210015, lon: 126.6746255}, \\n                    {lat: 37.59496672, lon: 126.6279671}, {lat: 37.59439292, lon: 126.6405824}, {lat: 37.60167498, lon: 126.6564585}, {lat: 37.5977252, lon: 126.667137}, {lat: 37.59293488, lon: 126.6731833}, {lat: 37.58496948, lon: 126.6759831}, \\n                    {lat: 37.56876146, lon: 126.6754722}, {lat: 37.56122795, lon: 126.6775452}, {lat: 37.55133706, lon: 126.6770966}, {lat: 37.54395416, lon: 126.6768454}, {lat: 37.52470809, lon: 126.6752851}, {lat: 37.51757789, lon: 126.6768399563},\\n                    {lat: 37.5070671, lon: 126.6762537}, {lat: 37.50025173, lon: 126.6758537}, {lat: 37.49007763, lon: 126.6752728}, {lat: 37.48412624, lon: 126.6838511}, {lat: 37.47416837, lon: 126.6814437},\\n                    {lat: 37.537442, lon: 126.737759}, {lat: 37.532424, lon: 126.7121}, {lat: 37.525051, lon: 126.709819}, {lat: 37.539606, lon: 126.72135}, {lat: 37.54421, lon: 126.72814}, {lat: 37.537759, lon: 126.728978}, \\n                    {lat: 37.530757, lon: 126.729686}, {lat: 37.532912, lon: 126.723909}, {lat: 37.528104, lon: 126.73642}, {lat: 37.548144, lon: 126.741451}, {lat: 37.561578, lon: 126.754899}, {lat: 37.545278, lon: 126.717463}, \\n                    {lat: 37.571645, lon: 126.736023}, {lat: 37.566414, lon: 126.742647}, {lat: 37.553578, lon: 126.744932}, {lat: 37.545062, lon: 126.738621}, {lat: 37.534507, lon: 126.741707}, {lat: 37.57709, lon: 126.733483}, \\n                    {lat: 37.547444, lon: 126.727095}, {lat: 37.543628, lon: 126.715609}, {lat: 37.550132, lon: 126.741986}, {lat: 37.526032, lon: 126.750287}, {lat: 37.529235, lon: 126.715001}, {lat: 37.543227, lon: 126.728081}, \\n                    {lat: 37.538084, lon: 126.722601}, {lat: 37.530313, lon: 126.72257},\\n                    {lat: 37.47408104, lon: 126.6213401}, {lat: 37.49416117, lon: 126.5314849}, {lat: 37.49332988, lon: 126.4883439}, {lat: 37.45278277, lon: 126.6282058}, {lat: 37.47444945, lon: 126.6272621},\\n                    {lat: 37.455946717, lon: 126.705586062}, {lat: 37.456085358, lon: 126.706082821}];\\n        }\\n        \\n        function initTmap(pos) {\\n            var map = new Tmapv2.Map(\\\"TMapApp\\\", {\\n                center: new Tmapv2.LatLng(pos.lat, pos.lng),\\n                width: \\\"100%\\\",\\n                height: \\\"100%\\\",\\n                httpsMode: true,\\n                zoomControl: false,\\n                zoom:15\\n            });\\n            map.addListener(\\\"click\\\", onClick); //\\uC6F9\\uC5D0\\uC11C \\uC9C0\\uB3C4 \\uD074\\uB9AD\\n            map.addListener(\\\"touchstart\\\", onTouchstart); // \\uBAA8\\uBC14\\uC77C\\uC5D0\\uC11C \\uC9C0\\uB3C4 \\uD130\\uCE58\\n            map.addListener(\\\"zoom_changed\\\", onZoomChanged);\\n    \\n            //map.zoomIn();\\n            //map[\\\"zoomIn\\\"]();\\n        \\n            return map;\\n      }\\n\\n      function onClick(e) {\\n          var result_mouse = e.latLng\\n          var resultDiv = document.getElementById(\\\"result_mouse\\\");\\n          // resultDiv.innerHTML = result_mouse;\\n          console.log(result_mouse._lat);     \\n      }\\n\\n      function onTouchstart(e) {\\n          var result = e.latLng\\n          var resultDiv = document.getElementById(\\\"result\\\");\\n          // resultDiv.innerHTML = result;\\n      }\\n        \\n      function onZoomChanged(e) {\\n        if(elevatormks){\\n          console.log(testmap.getZoom());\\n          if(testmap.getZoom()>15){\\n            for(var i = 0; i < elevatormks.length; i++){\\n              elevatormks[i].setMap(testmap);\\n            }\\n          }else{\\n            for(var i = 0; i < elevatormks.length; i++){\\n              elevatormks[i].setMap(null);\\n            }\\n          }\\n        }\\n      }\\n\\n      if(!testmap && \".concat(lat, \"){\\n        var mylocation = {lat: \").concat(lat, \", lng: \").concat(lng, \"};\\n        testmap = initTmap(mylocation); \\n      }\\n      else{\\n        console.log(\\\"Init false\\\");\\n      }\\n      \\n      if(marker){                       //\\uB9C8\\uCEE4 \\uC788\\uC73C\\uBA74 \\uC9C0\\uC6B0\\uAE30\\n        marker.setMap(null);\\n      }\\n\\n      var marker = new Tmapv2.Marker({  //\\uB9C8\\uCEE4 \\uC0DD\\uC131\\n        position: new Tmapv2.LatLng(\").concat(lat, \", \").concat(lng, \"),\\n        icon: \\\"\").concat(mylocation, \"\\\",\\n        iconSize: new Tmapv2.Size(40, 40),       \\n        map: testmap\\n      })\\n      \\n      if(testmap && \").concat(zoomin, \"){\\n        testmap.zoomIn();\\n      }\\n      if(testmap && \").concat(zoomout, \"){\\n        testmap.zoomOut();\\n      }\\n      if(testmap && \").concat(movelocation, \"){\\n        var setmylocation = new Tmapv2.LatLng(\").concat(lat, \", \").concat(lng, \");\\n        testmap.setCenter(setmylocation);\\n      }\\n\\n      //////////////////////////////////////////////////////////////////////////////////////////////\\n      var wheelmarker;\\n      var wheelmarkers;\\n      if(testmap && !wheelmarkers && latlon){\\n        wheelmarkers = [];\\n        for(var i = 0; i < latlon.length; i++){\\n          wheelmarker = new Tmapv2.Marker({\\n            position: new Tmapv2.LatLng(latlon[i].lat, latlon[i].lon),\\n            icon: \\\"\").concat(charging, \"\\\",\\n            iconSize: new Tmapv2.Size(15, 15),\\n            // map: testmap\\n          });\\n\\n          wheelmarkers.push(wheelmarker);\\n        }\\n      }\\n\\n      if(wheelmarkers){\\n        var ch;\\n      if(!ch && \").concat(wheelchecked, \"){\\n        ch = true;\\n        for(var i = 0; i < wheelmarkers.length; i++){\\n          wheelmarkers[i].setMap(testmap);\\n        }\\n      }else if(ch && !\").concat(wheelchecked, \"){\\n        ch = false;\\n        for(var i = 0; i < wheelmarkers.length; i++){\\n          wheelmarkers[i].setMap(null);\\n        }\\n      }\\n    }\\n\\n      //////////////////////////////////////////////////////////////////////////////////////////////\\n\\n      if(testmap && !elevatormks){        //\\uC5D8\\uB808\\uBCA0\\uC774\\uD130 \\uBC1B\\uC544\\uC634\\n        $.ajax({\\n          method: \\\"POST\\\",\\n          url: \\\"http://localhost:9000/api/find/incheonElevator\\\",\\n          async: false,\\n          data: {\\n\\n          },\\n          success: function(res){\\n            console.log(res);\\n\\n            elevatormks = [];\\n            for(var i = 0; i < res.length; i++){\\n              var lat = res[i].latitude;\\n              var lng = res[i].longitude;\\n\\n              var markerevt = new Tmapv2.Marker({\\n                position: new Tmapv2.LatLng(lat, lng),\\n                icon: \\\"\").concat(elevator, \"\\\",\\n                iconSize: new Tmapv2.Size(15, 15),\\n                // map: testmap\\n              });\\n              elevatormks.push(markerevt);\\n            }\\n          },\\n          error: function(err){\\n            console.log(\\\"\\uC5D8\\uB9AC\\uBCA0\\uC774\\uD130 \\uBABB\\uBC1B\\uC544\\uC634\\\");\\n          }\\n        })\\n        \\n      }\\n\\n      var markers;\\n      if(testmap && !markers){\\n      $.ajax({                //\\uACC4\\uB2E8 \\uBC1B\\uC544\\uC634\\n        method: \\\"POST\\\",\\n        url: \\\"http://localhost:9000/api/find/stair\\\",\\n        async: false,\\n        data: {\\n\\n        },\\n        success: function(res){\\n          if(markers){\\n            for(var i = 0; i < markers.length; i++){\\n              markers[i].setMap(null);\\n            }\\n            markers = [];\\n          }\\n          markers = [];\\n          \\n          for(var i = 0; i < res.length; i++){\\n            console.log(\\\"\\uB9C8\\uCEE4\\uC0DD\\uC131\\\");\\n            var lat = res[i].startlatitude;\\n            var lng = res[i].startlongitude;\\n\\n            var markerone = new Tmapv2.Marker({\\n              position: new Tmapv2.LatLng(lat, lng),\\n              icon: \\\"\").concat(stairs, \"\\\",\\n              iconSize: new Tmapv2.Size(15, 15),\\n              //map: testmap\\n            });\\n            \\n            markers.push(markerone);\\n          }\\n        },\\n        error: function(err){\\n          console.log(\\\"\\uACC4\\uB2E8 \\uBABB\\uBC1B\\uC544\\uC634\\\");\\n        }\\n      })\\n    }else{\\n      var ck;\\n      if(\").concat(checked, \" && !ck){\\n        ck = true;\\n        for(var i = 0; i < markers.length; i++){\\n          markers[i].setMap(testmap);\\n        }\\n        markerCluster = new Tmapv2.extension.MarkerCluster({\\n          markers: markers,\\n          // icons: \\\"\").concat(stairs, \"\\\",\\n          map: testmap\\n        });\\n      }else if(ck && !\").concat(checked, \"){\\n        ck = false;\\n        if(markerCluster){\\n          markerCluster.destroy();\\n        }\\n        for(var i = 0; i < markers.length; i++){\\n          markers[i].setMap(null);\\n        }\\n      }\\n      console.log(markers);\\n      \\n      console.log(marker);\\n      console.log(marker.getOffset());\\n\\n    }\\n   \");\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, [handleSuccess, location]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TMapApp\",\n    style: {\n      overflowY: \"hidden\",\n      height: \"100%\",\n      width: \"100%\",\n      position: \"fixed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onChange: handleKeyword,\n    placeholder: '장소, 버스, 지하철, 주소 검색',\n    location: location,\n    src: '/search',\n    style: {\n      boxShadow: \"1px 1px 20px 1px #D5D5D5\",\n      borderRadius: \"10px\",\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"navbutton\",\n    onClick: handleNavButton,\n    style: {\n      backgroundColor: \"white\",\n      opacity: \"1\",\n      border: \"none\",\n      top: \"-1px\",\n      borderRadius: \"8px\",\n      width: \"42px\",\n      right: \"-1px\",\n      marginLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: nav,\n    style: {\n      width: \"117%\",\n      height: \"110%\",\n      left: \"-2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 215\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"result_mouse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mylocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"targetbutton\",\n    onClick: handleLocationButton,\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"7px\",\n      border: \"none\",\n      height: \"45px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mytarget,\n    style: {\n      width: \"120%\",\n      height: \"87%\",\n      left: \"-3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 160\n    }\n  })))), /*#__PURE__*/React.createElement(SideBar, {\n    onCheck: onCheckedElement,\n    onCheckWheel: onCheckedWheel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 6\n    }\n  }, LIST, onCheckedElement), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightbarbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"plusbutton\",\n    onClick: handlePlusButton,\n    style: {\n      backgroundColor: \"#A6A6A6\",\n      border: \"none\",\n      opacity: \"0.8\",\n      borderRadius: \"50px\",\n      width: \"42px\",\n      right: \"-1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plussign,\n    style: {\n      width: \"80%\",\n      height: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 190\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"minusbutton\",\n    onClick: handleMinusButton,\n    style: {\n      backgroundColor: \"#A6A6A6\",\n      border: \"none\",\n      opacity: \"0.8\",\n      borderRadius: \"50px\",\n      marginTop: \"10px\",\n      width: \"42px\",\n      right: \"-1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: minussign,\n    style: {\n      width: \"80%\",\n      height: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 212\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Infobar\",\n    ref: outsideRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","SearchBar","SideBar","Button","getLocation","plus","plussign","minus","minussign","target","mytarget","nav","stairs","elevator","charging","mylocation","baseurl","Main","keyword","setKeyword","plusbutton","setPlusButton","minusbutton","setMinusButton","locationbutton","setLocationButton","location","setLocation","error","setError","locationWatchId","checkedList","setCheckedList","checked","setChecked","wheelchecked","setWheelChecked","onCheckedElement","item","console","log","filter","el","onCheckedWheel","onRemove","LIST","id","data","src","cid","navigate","outsideRef","useOutsideClick","handlePlusButton","handleMinusButton","handleLocationButton","handleNavButton","reverseGeocoding","latitude","longitude","handleSuccess","pos","coords","handleError","message","lat","lon","rG","create","baseURL","post","params","then","res","state","mystartlocation","catch","err","getStair","getstair","getElevator","handleKeyword","e","value","ref","handleClickOutside","event","setTimeout","current","contains","mytest","document","getElementById","innerText","addEventListener","removeEventListener","setScreenSize","vh","window","innerHeight","documentElement","style","setProperty","navigator","geolocation","watchPosition","zoomin","zoomout","movelocation","lng","script","createElement","innerHTML","type","async","head","appendChild","overflowY","height","width","position","boxShadow","borderRadius","backgroundColor","opacity","border","top","right","marginLeft","left","marginTop"],"sources":["C:/Users/201810938/Desktop/lastMap/TrafficMap/mapfront/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport '../css/Main.css';\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport SideBar from \"../components/ElevatorAndStair\";\r\nimport Button from \"../components/Button\";\r\nimport getLocation from '../getLocation';\r\nimport plus from \"../images/plus.png\";\r\nimport plussign from \"../images/plussign.png\";\r\nimport minus from \"../images/minus.png\";\r\nimport minussign from \"../images/minussign.png\"\r\nimport target from \"../images/location.png\";\r\nimport mytarget from \"../images/target.png\"\r\nimport nav from \"../images/nav.png\";\r\nimport stairs from \"../images/stairs.png\";\r\nimport elevator from \"../images/elevator.png\";\r\nimport charging from \"../images/charging_station_icon.png\"\r\n\r\nimport mylocation from \"../images/mylocation.png\";\r\n\r\nconst baseurl = 'http://localhost:9000/'         //베이스 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\nfunction Main() {\r\n    const [keyword, setKeyword] = useState();  //검색 받은 키워드\r\n    const [plusbutton, setPlusButton] = useState();\r\n    const [minusbutton, setMinusButton] = useState();\r\n    const [locationbutton, setLocationButton] = useState();\r\n \r\n    const [location, setLocation] = useState();\r\n    const [error, setError] = useState();\r\n    const locationWatchId = useRef(null);\r\n\r\n    const [checkedList, setCheckedList] = useState([]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [wheelchecked, setWheelChecked] = useState(false);\r\n\r\n    const onCheckedElement = (checked, item) => {\r\n      if(checked){\r\n        console.log(\"체크\");\r\n        setCheckedList([...checkedList, item]);\r\n        setChecked(true);\r\n      }else if(!checked){\r\n        console.log(\"체크 안돼있음\");\r\n        setCheckedList(checkedList.filter(el => el !== item));\r\n        setChecked(false);\r\n      }\r\n    };\r\n\r\n    const onCheckedWheel = (wheelchecked, item) => {\r\n      if(wheelchecked){\r\n        console.log(\"휠체어~체크\");\r\n        setWheelChecked(true);\r\n      }else if(!wheelchecked){\r\n        console.log(\"휠체어 노체크~\");\r\n        setWheelChecked(false);\r\n      }\r\n    }\r\n\r\n    const onRemove = item => {\r\n      setCheckedList(checkedList.filter(el => el !== item));\r\n    };\r\n\r\n    const LIST = [\r\n      {id: 0, data: '엘리베이터', src: elevator, cid: \"chk1\"},\r\n      {id: 1, data: '계단', src: stairs, cid: \"chk2\"},\r\n    ];\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const outsideRef = useRef(null);\r\n    useOutsideClick(outsideRef);\r\n\r\n    const handlePlusButton = () => {    //확대버튼\r\n      setPlusButton(true);\r\n    };\r\n    const handleMinusButton = () => {   //축소버튼\r\n      setMinusButton(true); \r\n    };\r\n    const handleLocationButton = () => {  //내위치이동 버튼\r\n      setLocationButton(true);\r\n    }\r\n    const handleNavButton = () =>{      //길찾기 버튼\r\n      console.log(\"길찾기 버튼 클릭\");\r\n      reverseGeocoding(location.latitude, location.longitude); \r\n    }\r\n\r\n    const handleSuccess = (pos) => {    //내 위치 찾기\r\n      const {latitude, longitude } = pos.coords;\r\n      console.log(latitude, longitude)\r\n\r\n      setLocation({\r\n        latitude, longitude\r\n      })\r\n    };\r\n    const handleError = (error) => {\r\n      setError(error.message);\r\n    };\r\n\r\n    const reverseGeocoding = (lat, lon) => {\r\n      const rG = axios.create({\r\n          baseURL: baseurl\r\n      })\r\n      rG.post('/api/find/reverseGeo', null, {params: {\r\n          lat: lat, lon: lon\r\n      }}).then(function(res){\r\n          navigate('/find-way', {\r\n            state: {\r\n              mylocation: location,\r\n              mystartlocation: res.data,\r\n            }\r\n          });   \r\n      }).catch(function(err){\r\n          console.log(\"지오코딩 실패\");\r\n      })\r\n  }\r\n    const getStair = () => {    //전체 계단 받아옴\r\n      const getstair = axios.create({\r\n        baseURL: baseurl\r\n      })\r\n      getstair.post('/api/find/stair')\r\n      .then(function(res){\r\n        console.log(res);\r\n      }).catch(function(err){\r\n        console.log(\"계단 정보 못받아옴\");\r\n      })\r\n    }\r\n    const getElevator = () => { //전체 엘리베이터 받아옴\r\n\r\n    }\r\n\r\n    // const handleError= (error) -> {\r\n    //   setError(error.message);\r\n    // };\r\n\r\n    const handleKeyword = (e) => setKeyword(e.target.value);\r\n\r\n    function useOutsideClick(ref){      //클릭이벤트\r\n      useEffect(()=>{\r\n        console.log(`useEffect()`);\r\n    \r\n        function handleClickOutside(event){\r\n          setTimeout(function(){\r\n          // console.log(ref);\r\n          \r\n          if(ref.current && !ref.current.contains(event.target)){\r\n            const mytest = document.getElementById('test');\r\n            console.log(`select의 외부 클릭을 감지!`);\r\n            console.log(mytest.innerText);\r\n          }\r\n        }, 100)\r\n        }\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n    \r\n        return () => {\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n      }, [ref]);\r\n\r\n    }\r\n\r\n    \r\n    function setScreenSize(){\r\n      let vh = window.innerHeight * 0.01;\r\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    navigator.geolocation.watchPosition(handleSuccess);\r\n    // setInterval(()=>{\r\n    //   navigator.geolocation.watchPosition(handleSuccess);\r\n    //   console.log(\"3초에 한번~\");\r\n    // }, 3000);\r\n    // navigator.geolocation.watchPosition(handleSuccess);\r\n  }, [])\r\n     \r\n  useEffect(() => {\r\n    var zoomin;\r\n    var zoomout;\r\n    var movelocation;\r\n    console.log(checkedList);\r\n    setScreenSize();\r\n    if(location){\r\n      var lat = location.latitude;\r\n      var lng = location.longitude;\r\n    }\r\n\r\n    if(plusbutton === true){\r\n      zoomin = true;\r\n      setPlusButton(false);\r\n    }\r\n    else{\r\n      zoomin = false;\r\n    }\r\n    if(minusbutton === true){\r\n      zoomout = true;\r\n      setMinusButton(false);\r\n    }\r\n    else{\r\n      zoomout = false;\r\n    }\r\n    if(locationbutton === true){\r\n      movelocation = true;\r\n      setLocationButton(false);\r\n    }\r\n    else{\r\n      movelocation = false;\r\n    }\r\n\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.innerHTML = ` \r\n        var testmap;\r\n        var zoomIn;\r\n        var marker, markerCluster;\r\n        var elevatormks;\r\n\r\n        var latlon;\r\n\r\n        if(!latlon){\r\n          latlon = [{lat: 37.44738908, lon: 126.7306811}, {lat: 37.44765055, lon: 126.7124925}, {lat: 37.45611315, lon: 126.7133538}, {lat: 37.46398002, lon: 126.710947}, {lat: 37.46611111, lon: 126.714686}, {lat: 37.467324, lon: 126.699152},\r\n                    {lat: 37.4613873, lon: 126.7311568}, {lat: 37.43588036, lon: 126.7473614}, {lat: 37.42791756, lon: 126.7507057}, {lat: 37.43010131, lon: 126.7159454}, {lat: 37.40422829, lon: 126.7163979}, {lat: 37.39776762, lon: 126.7263901},\r\n                    {lat: 37.44789883, lon: 126.7370578}, {lat: 37.39176155, lon: 126.7217373}, {lat: 37.42468926, lon: 126.7533209}, {lat: 37.45514557, lon: 126.701585}, {lat: 37.44854249, lon: 126.7530631}, {lat: 37.45587968, lon: 126.7195142},\r\n                    {lat: 37.4574194, lon: 126.7023421}, {lat: 37.45688086, lon: 126.7013016}, {lat: 37.46964954, lon: 126.7081713}, {lat: 37.44944591, lon: 126.7011633}, {lat: 37.45678003, lon: 126.7104966}, {lat: 37.45521033, lon: 126.7315437},\r\n                    {lat: 37.44817192, lon: 126.7366364}, {lat: 37.43963366, lon: 126.7598083}, \r\n                    {lat: 37.53264131, lon: 126.6441471}, {lat: 37.52641513, lon: 126.6705158}, {lat: 37.56441872, lon: 126.673601}, {lat: 37.54899846, lon: 126.6782282}, {lat: 37.53265854, lon: 126.6537394}, {lat: 37.52509167, lon: 126.6801348}, \r\n                    {lat: 37.51554696, lon: 126.6778363}, {lat: 37.51460915, lon: 126.6722848}, {lat: 37.51118138, lon: 126.6747559}, {lat: 37.50250466, lon: 126.6746007}, {lat: 37.50820266, lon: 126.6782976}, {lat: 37.49434393, lon: 126.672588},\r\n                    {lat: 37.49085455, lon: 126.6848496}, {lat: 37.49250983, lon: 126.6800417}, {lat: 37.48748624, lon: 126.683403}, {lat: 37.60508357, lon: 126.6618003}, {lat: 37.59507709, lon: 126.7017045}, {lat: 37.59210015, lon: 126.6746255}, \r\n                    {lat: 37.59496672, lon: 126.6279671}, {lat: 37.59439292, lon: 126.6405824}, {lat: 37.60167498, lon: 126.6564585}, {lat: 37.5977252, lon: 126.667137}, {lat: 37.59293488, lon: 126.6731833}, {lat: 37.58496948, lon: 126.6759831}, \r\n                    {lat: 37.56876146, lon: 126.6754722}, {lat: 37.56122795, lon: 126.6775452}, {lat: 37.55133706, lon: 126.6770966}, {lat: 37.54395416, lon: 126.6768454}, {lat: 37.52470809, lon: 126.6752851}, {lat: 37.51757789, lon: 126.6768399563},\r\n                    {lat: 37.5070671, lon: 126.6762537}, {lat: 37.50025173, lon: 126.6758537}, {lat: 37.49007763, lon: 126.6752728}, {lat: 37.48412624, lon: 126.6838511}, {lat: 37.47416837, lon: 126.6814437},\r\n                    {lat: 37.537442, lon: 126.737759}, {lat: 37.532424, lon: 126.7121}, {lat: 37.525051, lon: 126.709819}, {lat: 37.539606, lon: 126.72135}, {lat: 37.54421, lon: 126.72814}, {lat: 37.537759, lon: 126.728978}, \r\n                    {lat: 37.530757, lon: 126.729686}, {lat: 37.532912, lon: 126.723909}, {lat: 37.528104, lon: 126.73642}, {lat: 37.548144, lon: 126.741451}, {lat: 37.561578, lon: 126.754899}, {lat: 37.545278, lon: 126.717463}, \r\n                    {lat: 37.571645, lon: 126.736023}, {lat: 37.566414, lon: 126.742647}, {lat: 37.553578, lon: 126.744932}, {lat: 37.545062, lon: 126.738621}, {lat: 37.534507, lon: 126.741707}, {lat: 37.57709, lon: 126.733483}, \r\n                    {lat: 37.547444, lon: 126.727095}, {lat: 37.543628, lon: 126.715609}, {lat: 37.550132, lon: 126.741986}, {lat: 37.526032, lon: 126.750287}, {lat: 37.529235, lon: 126.715001}, {lat: 37.543227, lon: 126.728081}, \r\n                    {lat: 37.538084, lon: 126.722601}, {lat: 37.530313, lon: 126.72257},\r\n                    {lat: 37.47408104, lon: 126.6213401}, {lat: 37.49416117, lon: 126.5314849}, {lat: 37.49332988, lon: 126.4883439}, {lat: 37.45278277, lon: 126.6282058}, {lat: 37.47444945, lon: 126.6272621},\r\n                    {lat: 37.455946717, lon: 126.705586062}, {lat: 37.456085358, lon: 126.706082821}];\r\n        }\r\n        \r\n        function initTmap(pos) {\r\n            var map = new Tmapv2.Map(\"TMapApp\", {\r\n                center: new Tmapv2.LatLng(pos.lat, pos.lng),\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                httpsMode: true,\r\n                zoomControl: false,\r\n                zoom:15\r\n            });\r\n            map.addListener(\"click\", onClick); //웹에서 지도 클릭\r\n            map.addListener(\"touchstart\", onTouchstart); // 모바일에서 지도 터치\r\n            map.addListener(\"zoom_changed\", onZoomChanged);\r\n    \r\n            //map.zoomIn();\r\n            //map[\"zoomIn\"]();\r\n        \r\n            return map;\r\n      }\r\n\r\n      function onClick(e) {\r\n          var result_mouse = e.latLng\r\n          var resultDiv = document.getElementById(\"result_mouse\");\r\n          // resultDiv.innerHTML = result_mouse;\r\n          console.log(result_mouse._lat);     \r\n      }\r\n\r\n      function onTouchstart(e) {\r\n          var result = e.latLng\r\n          var resultDiv = document.getElementById(\"result\");\r\n          // resultDiv.innerHTML = result;\r\n      }\r\n        \r\n      function onZoomChanged(e) {\r\n        if(elevatormks){\r\n          console.log(testmap.getZoom());\r\n          if(testmap.getZoom()>15){\r\n            for(var i = 0; i < elevatormks.length; i++){\r\n              elevatormks[i].setMap(testmap);\r\n            }\r\n          }else{\r\n            for(var i = 0; i < elevatormks.length; i++){\r\n              elevatormks[i].setMap(null);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!testmap && ${lat}){\r\n        var mylocation = {lat: ${lat}, lng: ${lng}};\r\n        testmap = initTmap(mylocation); \r\n      }\r\n      else{\r\n        console.log(\"Init false\");\r\n      }\r\n      \r\n      if(marker){                       //마커 있으면 지우기\r\n        marker.setMap(null);\r\n      }\r\n\r\n      var marker = new Tmapv2.Marker({  //마커 생성\r\n        position: new Tmapv2.LatLng(${lat}, ${lng}),\r\n        icon: \"${mylocation}\",\r\n        iconSize: new Tmapv2.Size(40, 40),       \r\n        map: testmap\r\n      })\r\n      \r\n      if(testmap && ${zoomin}){\r\n        testmap.zoomIn();\r\n      }\r\n      if(testmap && ${zoomout}){\r\n        testmap.zoomOut();\r\n      }\r\n      if(testmap && ${movelocation}){\r\n        var setmylocation = new Tmapv2.LatLng(${lat}, ${lng});\r\n        testmap.setCenter(setmylocation);\r\n      }\r\n\r\n      //////////////////////////////////////////////////////////////////////////////////////////////\r\n      var wheelmarker;\r\n      var wheelmarkers;\r\n      if(testmap && !wheelmarkers && latlon){\r\n        wheelmarkers = [];\r\n        for(var i = 0; i < latlon.length; i++){\r\n          wheelmarker = new Tmapv2.Marker({\r\n            position: new Tmapv2.LatLng(latlon[i].lat, latlon[i].lon),\r\n            icon: \"${charging}\",\r\n            iconSize: new Tmapv2.Size(15, 15),\r\n            // map: testmap\r\n          });\r\n\r\n          wheelmarkers.push(wheelmarker);\r\n        }\r\n      }\r\n\r\n      if(wheelmarkers){\r\n        var ch;\r\n      if(!ch && ${wheelchecked}){\r\n        ch = true;\r\n        for(var i = 0; i < wheelmarkers.length; i++){\r\n          wheelmarkers[i].setMap(testmap);\r\n        }\r\n      }else if(ch && !${wheelchecked}){\r\n        ch = false;\r\n        for(var i = 0; i < wheelmarkers.length; i++){\r\n          wheelmarkers[i].setMap(null);\r\n        }\r\n      }\r\n    }\r\n\r\n      //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n      if(testmap && !elevatormks){        //엘레베이터 받아옴\r\n        $.ajax({\r\n          method: \"POST\",\r\n          url: \"http://localhost:9000/api/find/incheonElevator\",\r\n          async: false,\r\n          data: {\r\n\r\n          },\r\n          success: function(res){\r\n            console.log(res);\r\n\r\n            elevatormks = [];\r\n            for(var i = 0; i < res.length; i++){\r\n              var lat = res[i].latitude;\r\n              var lng = res[i].longitude;\r\n\r\n              var markerevt = new Tmapv2.Marker({\r\n                position: new Tmapv2.LatLng(lat, lng),\r\n                icon: \"${elevator}\",\r\n                iconSize: new Tmapv2.Size(15, 15),\r\n                // map: testmap\r\n              });\r\n              elevatormks.push(markerevt);\r\n            }\r\n          },\r\n          error: function(err){\r\n            console.log(\"엘리베이터 못받아옴\");\r\n          }\r\n        })\r\n        \r\n      }\r\n\r\n      var markers;\r\n      if(testmap && !markers){\r\n      $.ajax({                //계단 받아옴\r\n        method: \"POST\",\r\n        url: \"http://localhost:9000/api/find/stair\",\r\n        async: false,\r\n        data: {\r\n\r\n        },\r\n        success: function(res){\r\n          if(markers){\r\n            for(var i = 0; i < markers.length; i++){\r\n              markers[i].setMap(null);\r\n            }\r\n            markers = [];\r\n          }\r\n          markers = [];\r\n          \r\n          for(var i = 0; i < res.length; i++){\r\n            console.log(\"마커생성\");\r\n            var lat = res[i].startlatitude;\r\n            var lng = res[i].startlongitude;\r\n\r\n            var markerone = new Tmapv2.Marker({\r\n              position: new Tmapv2.LatLng(lat, lng),\r\n              icon: \"${stairs}\",\r\n              iconSize: new Tmapv2.Size(15, 15),\r\n              //map: testmap\r\n            });\r\n            \r\n            markers.push(markerone);\r\n          }\r\n        },\r\n        error: function(err){\r\n          console.log(\"계단 못받아옴\");\r\n        }\r\n      })\r\n    }else{\r\n      var ck;\r\n      if(${checked} && !ck){\r\n        ck = true;\r\n        for(var i = 0; i < markers.length; i++){\r\n          markers[i].setMap(testmap);\r\n        }\r\n        markerCluster = new Tmapv2.extension.MarkerCluster({\r\n          markers: markers,\r\n          // icons: \"${stairs}\",\r\n          map: testmap\r\n        });\r\n      }else if(ck && !${checked}){\r\n        ck = false;\r\n        if(markerCluster){\r\n          markerCluster.destroy();\r\n        }\r\n        for(var i = 0; i < markers.length; i++){\r\n          markers[i].setMap(null);\r\n        }\r\n      }\r\n      console.log(markers);\r\n      \r\n      console.log(marker);\r\n      console.log(marker.getOffset());\r\n\r\n    }\r\n   `;\r\n    script.type = \"text/javascript\";\r\n    script.async = \"async\";\r\n    document.head.appendChild(script);\r\n  }, [handleSuccess, location]);\r\n\r\n  return (\r\n    <main>\r\n    <div\r\n      id=\"TMapApp\"\r\n      style={{\r\n        overflowY: \"hidden\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"fixed\",\r\n      }}\r\n    >\r\n    </div>\r\n\r\n    <div className=\"search\">\r\n        <SearchBar onChange={handleKeyword} placeholder={'장소, 버스, 지하철, 주소 검색'} location={location} src={'/search'} style={{boxShadow: \"1px 1px 20px 1px #D5D5D5\", borderRadius: \"10px\", height: \"40px\"}}/>\r\n        {/* <Button onClick={handleNavButton} src={nav}></Button> */}\r\n        <button className=\"navbutton\" onClick={handleNavButton} style={{backgroundColor: \"white\", opacity: \"1\", border: \"none\", top: \"-1px\", borderRadius: \"8px\", width: \"42px\", right: \"-1px\", marginLeft: \"5px\", }}><img src={nav} style={{width: \"117%\", height: \"110%\", left: \"-2px\"}}></img></button>\r\n    </div>\r\n    <div id=\"test\">\r\n        <p id=\"result\" />\r\n        <p id=\"result_mouse\" />\r\n    </div>\r\n\r\n    <div className=\"left\">\r\n      <div className=\"mylocation\">\r\n        {/* <Button onClick={handleLocationButton} src={target}/> */}\r\n        <button className=\"targetbutton\" onClick={handleLocationButton} style={{backgroundColor: \"white\", borderRadius: \"7px\", border:\"none\", height: \"45px\"}}><img src={mytarget} style={{width: \"120%\", height: \"87%\", left: \"-3px\"}}></img></button>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n    {<SideBar onCheck={onCheckedElement} onCheckWheel={onCheckedWheel} >{LIST}{onCheckedElement}</SideBar>}\r\n    \r\n    <div className=\"rightbarbutton\">\r\n      <div className=\"zoom\">\r\n        {/* <Button onClick={handlePlusButton} src={plus}/> */}\r\n        {/* <Button onClick={handleMinusButton} src={minus}/> */}\r\n        <button className=\"plusbutton\" onClick={handlePlusButton} style={{backgroundColor: \"#A6A6A6\", border: \"none\", opacity: \"0.8\", borderRadius: \"50px\",  width: \"42px\", right: \"-1px\",}}><img src={plussign} style={{width: \"80%\", height: \"70%\"}}></img></button>\r\n        <button className=\"minusbutton\" onClick={handleMinusButton} style={{backgroundColor: \"#A6A6A6\", border: \"none\", opacity: \"0.8\",  borderRadius: \"50px\",  marginTop: \"10px\", width: \"42px\", right: \"-1px\",}}><img src={minussign} style={{width: \"80%\", height: \"70%\"}}></img></button>\r\n        {/* <SideBar /> */}\r\n      </div>\r\n    </div>\r\n    <div className=\"Infobar\" ref={outsideRef}>\r\n      \r\n    </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,OAAO,GAAG,wBAAhB,C,CAAiD;;AAEjD,SAASC,IAAT,GAAgB;EAAA,gBACkBrB,QAAQ,EAD1B;EAAA;EAAA,IACLsB,OADK;EAAA,IACIC,UADJ,kBAC+B;;;EAD/B,iBAEwBvB,QAAQ,EAFhC;EAAA;EAAA,IAELwB,UAFK;EAAA,IAEOC,aAFP;;EAAA,iBAG0BzB,QAAQ,EAHlC;EAAA;EAAA,IAGL0B,WAHK;EAAA,IAGQC,cAHR;;EAAA,iBAIgC3B,QAAQ,EAJxC;EAAA;EAAA,IAIL4B,cAJK;EAAA,IAIWC,iBAJX;;EAAA,iBAMoB7B,QAAQ,EAN5B;EAAA;EAAA,IAML8B,QANK;EAAA,IAMKC,WANL;;EAAA,kBAOc/B,QAAQ,EAPtB;EAAA;EAAA,IAOLgC,KAPK;EAAA,IAOEC,QAPF;;EAQZ,IAAMC,eAAe,GAAGhC,MAAM,CAAC,IAAD,CAA9B;;EARY,kBAU0BF,QAAQ,CAAC,EAAD,CAVlC;EAAA;EAAA,IAULmC,WAVK;EAAA,IAUQC,cAVR;;EAAA,kBAWkBpC,QAAQ,CAAC,KAAD,CAX1B;EAAA;EAAA,IAWLqC,OAXK;EAAA,IAWIC,UAXJ;;EAAA,kBAY4BtC,QAAQ,CAAC,KAAD,CAZpC;EAAA;EAAA,IAYLuC,YAZK;EAAA,IAYSC,eAZT;;EAcZ,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,OAAD,EAAUK,IAAV,EAAmB;IAC1C,IAAGL,OAAH,EAAW;MACTM,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAR,cAAc,8BAAKD,WAAL,IAAkBO,IAAlB,GAAd;MACAJ,UAAU,CAAC,IAAD,CAAV;IACD,CAJD,MAIM,IAAG,CAACD,OAAJ,EAAY;MAChBM,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAR,cAAc,CAACD,WAAW,CAACU,MAAZ,CAAmB,UAAAC,EAAE;QAAA,OAAIA,EAAE,KAAKJ,IAAX;MAAA,CAArB,CAAD,CAAd;MACAJ,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CAVD;;EAYA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACR,YAAD,EAAeG,IAAf,EAAwB;IAC7C,IAAGH,YAAH,EAAgB;MACdI,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAJ,eAAe,CAAC,IAAD,CAAf;IACD,CAHD,MAGM,IAAG,CAACD,YAAJ,EAAiB;MACrBI,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAJ,eAAe,CAAC,KAAD,CAAf;IACD;EACF,CARD;;EAUA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAAAN,IAAI,EAAI;IACvBN,cAAc,CAACD,WAAW,CAACU,MAAZ,CAAmB,UAAAC,EAAE;MAAA,OAAIA,EAAE,KAAKJ,IAAX;IAAA,CAArB,CAAD,CAAd;EACD,CAFD;;EAIA,IAAMO,IAAI,GAAG,CACX;IAACC,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE,OAAd;IAAuBC,GAAG,EAAEnC,QAA5B;IAAsCoC,GAAG,EAAE;EAA3C,CADW,EAEX;IAACH,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE,IAAd;IAAoBC,GAAG,EAAEpC,MAAzB;IAAiCqC,GAAG,EAAE;EAAtC,CAFW,CAAb;EAKA,IAAMC,QAAQ,GAAGlD,WAAW,EAA5B;EAEA,IAAMmD,UAAU,GAAGrD,MAAM,CAAC,IAAD,CAAzB;EACAsD,eAAe,CAACD,UAAD,CAAf;;EAEA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAAK;IAClChC,aAAa,CAAC,IAAD,CAAb;EACD,CAFD;;EAGA,IAAMiC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAAI;IAClC/B,cAAc,CAAC,IAAD,CAAd;EACD,CAFD;;EAGA,IAAMgC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IAAG;IACpC9B,iBAAiB,CAAC,IAAD,CAAjB;EACD,CAFD;;EAGA,IAAM+B,eAAe,GAAG,SAAlBA,eAAkB,GAAK;IAAO;IAClCjB,OAAO,CAACC,GAAR,CAAY,WAAZ;IACAiB,gBAAgB,CAAC/B,QAAQ,CAACgC,QAAV,EAAoBhC,QAAQ,CAACiC,SAA7B,CAAhB;EACD,CAHD;;EAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;IAAK;IAAL,kBACEA,GAAG,CAACC,MADN;IAAA,IACtBJ,QADsB,eACtBA,QADsB;IAAA,IACZC,SADY,eACZA,SADY;IAE7BpB,OAAO,CAACC,GAAR,CAAYkB,QAAZ,EAAsBC,SAAtB;IAEAhC,WAAW,CAAC;MACV+B,QAAQ,EAARA,QADU;MACAC,SAAS,EAATA;IADA,CAAD,CAAX;EAGD,CAPD;;EAQA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACnC,KAAD,EAAW;IAC7BC,QAAQ,CAACD,KAAK,CAACoC,OAAP,CAAR;EACD,CAFD;;EAIA,IAAMP,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACQ,GAAD,EAAMC,GAAN,EAAc;IACrC,IAAMC,EAAE,GAAGpE,KAAK,CAACqE,MAAN,CAAa;MACpBC,OAAO,EAAErD;IADW,CAAb,CAAX;IAGAmD,EAAE,CAACG,IAAH,CAAQ,sBAAR,EAAgC,IAAhC,EAAsC;MAACC,MAAM,EAAE;QAC3CN,GAAG,EAAEA,GADsC;QACjCC,GAAG,EAAEA;MAD4B;IAAT,CAAtC,EAEIM,IAFJ,CAES,UAASC,GAAT,EAAa;MAClBvB,QAAQ,CAAC,WAAD,EAAc;QACpBwB,KAAK,EAAE;UACL3D,UAAU,EAAEW,QADP;UAELiD,eAAe,EAAEF,GAAG,CAAC1B;QAFhB;MADa,CAAd,CAAR;IAMH,CATD,EASG6B,KATH,CASS,UAASC,GAAT,EAAa;MAClBtC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACH,CAXD;EAYH,CAhBC;;EAiBA,IAAMsC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAAK;IAC1B,IAAMC,QAAQ,GAAGhF,KAAK,CAACqE,MAAN,CAAa;MAC5BC,OAAO,EAAErD;IADmB,CAAb,CAAjB;IAGA+D,QAAQ,CAACT,IAAT,CAAc,iBAAd,EACCE,IADD,CACM,UAASC,GAAT,EAAa;MACjBlC,OAAO,CAACC,GAAR,CAAYiC,GAAZ;IACD,CAHD,EAGGG,KAHH,CAGS,UAASC,GAAT,EAAa;MACpBtC,OAAO,CAACC,GAAR,CAAY,YAAZ;IACD,CALD;EAMD,CAVD;;EAWA,IAAMwC,WAAW,GAAG,SAAdA,WAAc,GAAM,CAAE;EAE3B,CAFD,CAxGY,CA4GZ;EACA;EACA;;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD;IAAA,OAAO/D,UAAU,CAAC+D,CAAC,CAACzE,MAAF,CAAS0E,KAAV,CAAjB;EAAA,CAAtB;;EAEA,SAAS/B,eAAT,CAAyBgC,GAAzB,EAA6B;IAAO;IAClCvF,SAAS,CAAC,YAAI;MACZ0C,OAAO,CAACC,GAAR;;MAEA,SAAS6C,kBAAT,CAA4BC,KAA5B,EAAkC;QAChCC,UAAU,CAAC,YAAU;UACrB;UAEA,IAAGH,GAAG,CAACI,OAAJ,IAAe,CAACJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBH,KAAK,CAAC7E,MAA3B,CAAnB,EAAsD;YACpD,IAAMiF,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;YACArD,OAAO,CAACC,GAAR;YACAD,OAAO,CAACC,GAAR,CAAYkD,MAAM,CAACG,SAAnB;UACD;QACF,CARW,EAQT,GARS,CAAV;MASD;;MACDF,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuCT,kBAAvC;MAEA,OAAO,YAAM;QACXM,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0CV,kBAA1C;MACD,CAFD;IAGD,CAnBQ,EAmBN,CAACD,GAAD,CAnBM,CAAT;EAqBD;;EAGD,SAASY,aAAT,GAAwB;IACtB,IAAIC,EAAE,GAAGC,MAAM,CAACC,WAAP,GAAqB,IAA9B;IACAR,QAAQ,CAACS,eAAT,CAAyBC,KAAzB,CAA+BC,WAA/B,CAA2C,MAA3C,YAAsDL,EAAtD;EACH;;EAEDpG,SAAS,CAAC,YAAI;IACZ0G,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoC7C,aAApC,EADY,CAEZ;IACA;IACA;IACA;IACA;EACD,CAPQ,EAON,EAPM,CAAT;EASA/D,SAAS,CAAC,YAAM;IACd,IAAI6G,MAAJ;IACA,IAAIC,OAAJ;IACA,IAAIC,YAAJ;IACArE,OAAO,CAACC,GAAR,CAAYT,WAAZ;IACAiE,aAAa;;IACb,IAAGtE,QAAH,EAAY;MACV,IAAIuC,GAAG,GAAGvC,QAAQ,CAACgC,QAAnB;MACA,IAAImD,GAAG,GAAGnF,QAAQ,CAACiC,SAAnB;IACD;;IAED,IAAGvC,UAAU,KAAK,IAAlB,EAAuB;MACrBsF,MAAM,GAAG,IAAT;MACArF,aAAa,CAAC,KAAD,CAAb;IACD,CAHD,MAII;MACFqF,MAAM,GAAG,KAAT;IACD;;IACD,IAAGpF,WAAW,KAAK,IAAnB,EAAwB;MACtBqF,OAAO,GAAG,IAAV;MACApF,cAAc,CAAC,KAAD,CAAd;IACD,CAHD,MAII;MACFoF,OAAO,GAAG,KAAV;IACD;;IACD,IAAGnF,cAAc,KAAK,IAAtB,EAA2B;MACzBoF,YAAY,GAAG,IAAf;MACAnF,iBAAiB,CAAC,KAAD,CAAjB;IACD,CAHD,MAII;MACFmF,YAAY,GAAG,KAAf;IACD;;IAGD,IAAME,MAAM,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,QAAvB,CAAf;IACAD,MAAM,CAACE,SAAP,4iLA4EmB/C,GA5EnB,gDA6E6BA,GA7E7B,oBA6E0C4C,GA7E1C,wXAyFkC5C,GAzFlC,eAyF0C4C,GAzF1C,iCA0Fa9F,UA1Fb,iIA+FkB2F,MA/FlB,yEAkGkBC,OAlGlB,0EAqGkBC,YArGlB,+DAsG4C3C,GAtG5C,eAsGoD4C,GAtGpD,meAkHiB/F,QAlHjB,2OA6HcqB,YA7Hd,yKAkIoBA,YAlIpB,w4BA8JqBtB,QA9JrB,4pCAqMmBD,MArMnB,2VAmNOqB,OAnNP,iQA0NmBrB,MA1NnB,6EA6NoBqB,OA7NpB;IA6OA6E,MAAM,CAACG,IAAP,GAAc,iBAAd;IACAH,MAAM,CAACI,KAAP,GAAe,OAAf;IACAvB,QAAQ,CAACwB,IAAT,CAAcC,WAAd,CAA0BN,MAA1B;EACD,CAnRQ,EAmRN,CAAClD,aAAD,EAAgBlC,QAAhB,CAnRM,CAAT;EAqRA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IACE,EAAE,EAAC,SADL;IAEE,KAAK,EAAE;MACL2F,SAAS,EAAE,QADN;MAELC,MAAM,EAAE,MAFH;MAGLC,KAAK,EAAE,MAHF;MAILC,QAAQ,EAAE;IAJL,CAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,eAYA;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,SAAD;IAAW,QAAQ,EAAEvC,aAArB;IAAoC,WAAW,EAAE,oBAAjD;IAAuE,QAAQ,EAAEvD,QAAjF;IAA2F,GAAG,EAAE,SAAhG;IAA2G,KAAK,EAAE;MAAC+F,SAAS,EAAE,0BAAZ;MAAwCC,YAAY,EAAE,MAAtD;MAA8DJ,MAAM,EAAE;IAAtE,CAAlH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAGI;IAAQ,SAAS,EAAC,WAAlB;IAA8B,OAAO,EAAE9D,eAAvC;IAAwD,KAAK,EAAE;MAACmE,eAAe,EAAE,OAAlB;MAA2BC,OAAO,EAAE,GAApC;MAAyCC,MAAM,EAAE,MAAjD;MAAyDC,GAAG,EAAE,MAA9D;MAAsEJ,YAAY,EAAE,KAApF;MAA2FH,KAAK,EAAE,MAAlG;MAA0GQ,KAAK,EAAE,MAAjH;MAAyHC,UAAU,EAAE;IAArI,CAA/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA8M;IAAK,GAAG,EAAErH,GAAV;IAAe,KAAK,EAAE;MAAC4G,KAAK,EAAE,MAAR;MAAgBD,MAAM,EAAE,MAAxB;MAAgCW,IAAI,EAAE;IAAtC,CAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAA9M,CAHJ,CAZA,eAiBA;IAAK,EAAE,EAAC,MAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAG,EAAE,EAAC,QAAN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI;IAAG,EAAE,EAAC,cAAN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAjBA,eAsBA;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAQ,SAAS,EAAC,cAAlB;IAAiC,OAAO,EAAE1E,oBAA1C;IAAgE,KAAK,EAAE;MAACoE,eAAe,EAAE,OAAlB;MAA2BD,YAAY,EAAE,KAAzC;MAAgDG,MAAM,EAAC,MAAvD;MAA+DP,MAAM,EAAE;IAAvE,CAAvE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAuJ;IAAK,GAAG,EAAE5G,QAAV;IAAoB,KAAK,EAAE;MAAC6G,KAAK,EAAE,MAAR;MAAgBD,MAAM,EAAE,KAAxB;MAA+BW,IAAI,EAAE;IAArC,CAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAvJ,CAFF,CADF,CAtBA,eA8BC,oBAAC,OAAD;IAAS,OAAO,EAAE5F,gBAAlB;IAAoC,YAAY,EAAEM,cAAlD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAoEE,IAApE,EAA0ER,gBAA1E,CA9BD,eAgCA;IAAK,SAAS,EAAC,gBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGE;IAAQ,SAAS,EAAC,YAAlB;IAA+B,OAAO,EAAEgB,gBAAxC;IAA0D,KAAK,EAAE;MAACsE,eAAe,EAAE,SAAlB;MAA6BE,MAAM,EAAE,MAArC;MAA6CD,OAAO,EAAE,KAAtD;MAA6DF,YAAY,EAAE,MAA3E;MAAoFH,KAAK,EAAE,MAA3F;MAAmGQ,KAAK,EAAE;IAA1G,CAAjE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAqL;IAAK,GAAG,EAAEzH,QAAV;IAAoB,KAAK,EAAE;MAACiH,KAAK,EAAE,KAAR;MAAeD,MAAM,EAAE;IAAvB,CAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAArL,CAHF,eAIE;IAAQ,SAAS,EAAC,aAAlB;IAAgC,OAAO,EAAEhE,iBAAzC;IAA4D,KAAK,EAAE;MAACqE,eAAe,EAAE,SAAlB;MAA6BE,MAAM,EAAE,MAArC;MAA6CD,OAAO,EAAE,KAAtD;MAA8DF,YAAY,EAAE,MAA5E;MAAqFQ,SAAS,EAAE,MAAhG;MAAwGX,KAAK,EAAE,MAA/G;MAAuHQ,KAAK,EAAE;IAA9H,CAAnE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAA2M;IAAK,GAAG,EAAEvH,SAAV;IAAqB,KAAK,EAAE;MAAC+G,KAAK,EAAE,KAAR;MAAeD,MAAM,EAAE;IAAvB,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAA3M,CAJF,CADF,CAhCA,eAyCA;IAAK,SAAS,EAAC,SAAf;IAAyB,GAAG,EAAEnE,UAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAzCA,CADF;AAgDD;;AAED,eAAelC,IAAf"},"metadata":{},"sourceType":"module"}