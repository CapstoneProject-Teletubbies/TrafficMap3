{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\201810938\\\\Desktop\\\\lastMap\\\\TrafficMap\\\\mapfront\\\\src\\\\pages\\\\FindWay.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { useLocation } from 'react-router';\nimport proj4 from 'proj4';\nimport '../css/FindWay.css';\nimport UrlModal from '../components/UrlModal';\nimport SearchBar from '../components/SearchBar';\nimport SideBar from '../components/SideBar';\nimport ElevatorAndStair from \"../components/ElevatorAndStair\";\nimport walk from \"../images/walkp.png\";\nimport bus from \"../images/bus.png\";\nimport mymarker from \"../images/mylocation.png\";\nimport stairs from \"../images/stairs.png\";\nimport charging from \"../images/charging_station_icon.png\";\nvar baseurl = 'http://localhost:9000/'; //베이스 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nfunction FindWay(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      findLocation = _useState2[0],\n      setFindLocation = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mylat = _useState4[0],\n      setMyLat = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mylon = _useState6[0],\n      setMyLon = _useState6[1];\n\n  var _useState7 = useState('출발지 입력'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      startplaceholder = _useState8[0],\n      setStartPlaceHolder = _useState8[1];\n\n  var _useState9 = useState('도착지 입력'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      endplaceholder = _useState10[0],\n      setEndPlaceHolder = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      present = _useState12[0],\n      setPresent = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      startPlace = _useState14[0],\n      setStartPlace = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      endPlace = _useState16[0],\n      setEndPlace = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      both = _useState18[0],\n      setBoth = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      findway = _useState20[0],\n      setFindway = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      route = _useState22[0],\n      setRoute = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      routeDetail = _useState24[0],\n      setRouteDetail = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      totalDistance = _useState26[0],\n      setTotalDistance = _useState26[1];\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      totalTime = _useState28[0],\n      setTotalTime = _useState28[1];\n\n  var _useState29 = useState(true),\n      _useState30 = _slicedToArray(_useState29, 2),\n      mtest = _useState30[0],\n      setMTest = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      checked = _useState32[0],\n      setChecked = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      check = _useState34[0],\n      setCheck = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      wheelchecked = _useState36[0],\n      setWheelChecked = _useState36[1];\n\n  var onCheckedElement = function onCheckedElement(checked, item) {\n    if (checked) {\n      setChecked(true);\n    } else if (!checked) {\n      setChecked(false);\n    }\n  };\n\n  var onCheckedWheel = function onCheckedWheel(wheelchecked, item) {\n    if (wheelchecked) {\n      setWheelChecked(true);\n    } else if (!wheelchecked) {\n      setWheelChecked(false);\n    }\n  };\n\n  var LIST = [{\n    id: 0,\n    data: '엘리베이터',\n    src: stairs,\n    cid: \"chk1\"\n  }, {\n    id: 1,\n    data: '계단',\n    src: stairs,\n    cid: \"chk2\"\n  }];\n  var location = useLocation();\n  var mylocation = location.state.mylocation;\n\n  var handleSuccess = function handleSuccess(pos) {\n    //현재 내 위치 받아오기\n    var _pos$coords = pos.coords,\n        latitude = _pos$coords.latitude,\n        longitude = _pos$coords.longitude;\n\n    if (!startPlace) {\n      reverseGeocoding(latitude, longitude);\n    } else {\n      console.log(startPlace);\n      console.log(findLocation);\n    }\n\n    setMyLat(latitude);\n    setMyLon(longitude);\n    setFindLocation({\n      latitude: latitude,\n      longitude: longitude\n    });\n  };\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      modalOpen = _useState38[0],\n      setModalOpen = _useState38[1];\n\n  var openMadal = function openMadal() {\n    setTimeout(setModalOpen(true), 50);\n  };\n\n  var closeModal = function closeModal() {\n    setModalOpen(false);\n  };\n\n  var urlModal = function urlModal() {\n    var start, end;\n\n    if (startPlace.name.includes('역') && startPlace.obj.upperBizName === '교통편의') {\n      start = startPlace.name.split('역')[0] + '역';\n    } else {\n      start = startPlace.name;\n    }\n\n    if (endPlace.name.includes('역') && endPlace.obj.upperBizName === '교통편의') {\n      end = endPlace.name.split('역')[0] + '역';\n    } else {\n      end = endPlace.name;\n    }\n\n    TmapfindTrans(start, end);\n    closeModal();\n  };\n\n  var TmapfindWay = function TmapfindWay(startlng, startlat, endlng, endlat) {\n    //길찾기\n    setMTest(false);\n    var fw = axios.create({\n      baseURL: baseurl\n    });\n    fw.post('/api/way', null, {\n      params: {\n        startX: startlng,\n        startY: startlat,\n        endX: endlng,\n        endY: endlat,\n        startName: \"출발지\",\n        endName: \"도착지\",\n        option: '0'\n      }\n    }).then(function (res) {\n      setRoute(res.data);\n    }).catch(function (err) {\n      console.log(\"길찾기 실패\");\n    });\n  };\n\n  var TmapfindTrans = function TmapfindTrans(startname, endname) {\n    //대중교통 길찾기 url\n    var tft = axios.create({\n      baseURL: baseurl\n    });\n    tft.post('/api/way/trans', null, {\n      params: {\n        sName: startname,\n        eName: endname\n      }\n    }).then(function (res) {\n      window.open(res.data, '_blank');\n    }).catch(function (err) {\n      window.open('https://map.kakao.com/', '_blank');\n      console.log(\"대중교통 길찾기 실패\");\n    });\n  };\n\n  var reverseGeocoding = function reverseGeocoding(lat, lon) {\n    //좌표를 주소로 변환\n    var rG = axios.create({\n      baseURL: baseurl\n    });\n    rG.post('/api/find/reverseGeo', null, {\n      params: {\n        lat: lat,\n        lon: lon\n      }\n    }).then(function (res) {\n      setStartPlaceHolder(res.data);\n      setStartPlace({\n        name: res.data,\n        obj: {\n          latitude: lat,\n          longitude: lon\n        }\n      });\n    }).catch(function (err) {\n      console.log(\"지오코딩 실패\");\n    });\n  };\n\n  useEffect(function () {\n    if (location.state.mystartlocation) {\n      console.log(location.state.mystartlocation);\n      setStartPlaceHolder(location.state.mystartlocation);\n      setStartPlace({\n        name: location.state.mystartlocation,\n        obj: {\n          latitude: location.state.mylocation.latitude,\n          longitude: location.state.mylocation.longitude\n        }\n      });\n    } else {\n      console.log(\"없어\");\n    }\n  }, []);\n  useEffect(function () {\n    console.log(route);\n    var i = 0;\n\n    if (route) {\n      route.map(function (obj, index) {\n        if (index == 0) {\n          setTotalDistance(obj.totalDistance);\n          setTotalTime(obj.totalTime);\n        }\n\n        if (obj.pointIndex == i) {\n          setRouteDetail(function (routeDetail) {\n            return [].concat(_toConsumableArray(routeDetail), [obj.pointDescription]);\n          });\n          i++;\n        }\n      });\n    }\n  }, [route]);\n  useEffect(function () {\n    console.log(location.state);\n    setFindway(location.state);\n\n    if (location.state) {\n      if (location.state.startBuilding) {\n        console.log(\"출발지 정보 왔어요\");\n        setStartPlace(location.state.startBuilding); //출발지 정보\n\n        setStartPlaceHolder(location.state.startBuilding.name); //출발지 이름\n      }\n\n      if (location.state.endBuilding) {\n        console.log(\"도착지 정보 왔어요\");\n        setEndPlace(location.state.endBuilding); //도착지 정보\n\n        setEndPlaceHolder(location.state.endBuilding.name); //도착지 이름\n      } // if(location.state.startBuilding && location.state.endBuilding){\n\n\n      if (startPlace && endPlace) {\n        navigator.geolocation.getCurrentPosition(handleSuccess);\n        var startlat, startlng, endlat, endlng;\n        var besseltm = \"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\";\n        var wgs84 = \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\";\n        var posx, posy;\n        console.log(\"출발지, 도착지 둘 다 입력 완료\");\n        console.log(startPlace);\n        console.log(endPlace);\n        setBoth(true);\n\n        if (startPlace.address === '버스정류장') {\n          posx = startPlace.obj.posx;\n          posy = startPlace.obj.posy;\n          var pt = new proj4.Point(posx, posy);\n          var result = proj4(besseltm, wgs84, pt);\n          console.log(result);\n          startlat = result.y;\n          startlng = result.x;\n        } else {\n          startlat = startPlace.obj.latitude;\n          startlng = startPlace.obj.longitude;\n        }\n\n        if (endPlace.address === '버스정류장') {\n          posx = endPlace.obj.posx;\n          posy = endPlace.obj.posy;\n          var pt = new proj4.Point(posx, posy);\n          var result = proj4(besseltm, wgs84, pt);\n          console.log(result);\n          endlat = result.y;\n          endlng = result.x;\n        } else {\n          endlat = endPlace.obj.latitude;\n          endlng = endPlace.obj.longitude;\n        }\n\n        if (mtest) {\n          TmapfindWay(startlng, startlat, endlng, endlat);\n        }\n      }\n    }\n  }, [startPlace, endPlace, mtest]); ///////////////////////////////////////////\n  //////////////////////////////////////////\n\n  var handleXButton = function handleXButton() {\n    console.log(\"클릭\");\n    window.location.href = \"/\"; // TmapfindWay();\n    // TmapfindTrans();\n  };\n\n  var handleTransButton = function handleTransButton() {\n    openMadal();\n  };\n\n  useEffect(function () {\n    navigator.geolocation.watchPosition(handleSuccess);\n  }, []);\n  useEffect(function () {\n    var startLat, startLng;\n    var endLat, endLng;\n    var middleLat, middleLng;\n    var posx, posy;\n    var besseltm = \"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\";\n    var wgs84 = \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\";\n    navigator.geolocation.getCurrentPosition(handleSuccess);\n\n    if (findLocation) {\n      console.log(\"있다!\");\n      var lat = findLocation.latitude;\n      var lng = findLocation.longitude;\n    }\n\n    if (both) {\n      if (startPlace.address === '버스정류장') {\n        posx = startPlace.obj.posx;\n        posy = startPlace.obj.posy;\n        var pt = new proj4.Point(posx, posy);\n        var result = proj4(besseltm, wgs84, pt);\n        console.log(result);\n        startLat = result.y;\n        startLng = result.x;\n      } else {\n        startLat = startPlace.obj.latitude;\n        startLng = startPlace.obj.longitude;\n      }\n\n      if (endPlace.address === '버스정류장') {\n        posx = endPlace.obj.posx;\n        posy = endPlace.obj.posy;\n        var pt = new proj4.Point(posx, posy);\n        var result = proj4(besseltm, wgs84, pt);\n        console.log(result);\n        endLat = result.y;\n        endLng = result.x;\n      } else {\n        endLat = endPlace.obj.latitude;\n        endLng = endPlace.obj.longitude;\n      }\n\n      middleLat = (startLat + endLat) / 2;\n      middleLng = (startLng + endLng) / 2;\n      console.log(middleLat, middleLng);\n    }\n\n    var script = document.createElement(\"script\");\n    script.innerHTML = \"\\n            var map;\\n            var marker_s, marker_e, marker_p1, marker_p2;\\n            var totalMarkerArr = [];\\n            var drawInfoArr = [];\\n            var resultdrawArr = [];\\n            var checki;\\n            var marker_myl;\\n            var markerCluster;\\n\\n            var latlon;\\n\\n            if(!latlon){\\n                latlon = [{lat: 37.44738908, lon: 126.7306811}, {lat: 37.44765055, lon: 126.7124925}, {lat: 37.45611315, lon: 126.7133538}, {lat: 37.46398002, lon: 126.710947}, {lat: 37.46611111, lon: 126.714686}, {lat: 37.467324, lon: 126.699152},\\n                          {lat: 37.4613873, lon: 126.7311568}, {lat: 37.43588036, lon: 126.7473614}, {lat: 37.42791756, lon: 126.7507057}, {lat: 37.43010131, lon: 126.7159454}, {lat: 37.40422829, lon: 126.7163979}, {lat: 37.39776762, lon: 126.7263901},\\n                          {lat: 37.44789883, lon: 126.7370578}, {lat: 37.39176155, lon: 126.7217373}, {lat: 37.42468926, lon: 126.7533209}, {lat: 37.45514557, lon: 126.701585}, {lat: 37.44854249, lon: 126.7530631}, {lat: 37.45587968, lon: 126.7195142},\\n                          {lat: 37.4574194, lon: 126.7023421}, {lat: 37.45688086, lon: 126.7013016}, {lat: 37.46964954, lon: 126.7081713}, {lat: 37.44944591, lon: 126.7011633}, {lat: 37.45678003, lon: 126.7104966}, {lat: 37.45521033, lon: 126.7315437},\\n                          {lat: 37.44817192, lon: 126.7366364}, {lat: 37.43963366, lon: 126.7598083}, \\n                          {lat: 37.53264131, lon: 126.6441471}, {lat: 37.52641513, lon: 126.6705158}, {lat: 37.56441872, lon: 126.673601}, {lat: 37.54899846, lon: 126.6782282}, {lat: 37.53265854, lon: 126.6537394}, {lat: 37.52509167, lon: 126.6801348}, \\n                          {lat: 37.51554696, lon: 126.6778363}, {lat: 37.51460915, lon: 126.6722848}, {lat: 37.51118138, lon: 126.6747559}, {lat: 37.50250466, lon: 126.6746007}, {lat: 37.50820266, lon: 126.6782976}, {lat: 37.49434393, lon: 126.672588},\\n                          {lat: 37.49085455, lon: 126.6848496}, {lat: 37.49250983, lon: 126.6800417}, {lat: 37.48748624, lon: 126.683403}, {lat: 37.60508357, lon: 126.6618003}, {lat: 37.59507709, lon: 126.7017045}, {lat: 37.59210015, lon: 126.6746255}, \\n                          {lat: 37.59496672, lon: 126.6279671}, {lat: 37.59439292, lon: 126.6405824}, {lat: 37.60167498, lon: 126.6564585}, {lat: 37.5977252, lon: 126.667137}, {lat: 37.59293488, lon: 126.6731833}, {lat: 37.58496948, lon: 126.6759831}, \\n                          {lat: 37.56876146, lon: 126.6754722}, {lat: 37.56122795, lon: 126.6775452}, {lat: 37.55133706, lon: 126.6770966}, {lat: 37.54395416, lon: 126.6768454}, {lat: 37.52470809, lon: 126.6752851}, {lat: 37.51757789, lon: 126.6768399563},\\n                          {lat: 37.5070671, lon: 126.6762537}, {lat: 37.50025173, lon: 126.6758537}, {lat: 37.49007763, lon: 126.6752728}, {lat: 37.48412624, lon: 126.6838511}, {lat: 37.47416837, lon: 126.6814437},\\n                          {lat: 37.537442, lon: 126.737759}, {lat: 37.532424, lon: 126.7121}, {lat: 37.525051, lon: 126.709819}, {lat: 37.539606, lon: 126.72135}, {lat: 37.54421, lon: 126.72814}, {lat: 37.537759, lon: 126.728978}, \\n                          {lat: 37.530757, lon: 126.729686}, {lat: 37.532912, lon: 126.723909}, {lat: 37.528104, lon: 126.73642}, {lat: 37.548144, lon: 126.741451}, {lat: 37.561578, lon: 126.754899}, {lat: 37.545278, lon: 126.717463}, \\n                          {lat: 37.571645, lon: 126.736023}, {lat: 37.566414, lon: 126.742647}, {lat: 37.553578, lon: 126.744932}, {lat: 37.545062, lon: 126.738621}, {lat: 37.534507, lon: 126.741707}, {lat: 37.57709, lon: 126.733483}, \\n                          {lat: 37.547444, lon: 126.727095}, {lat: 37.543628, lon: 126.715609}, {lat: 37.550132, lon: 126.741986}, {lat: 37.526032, lon: 126.750287}, {lat: 37.529235, lon: 126.715001}, {lat: 37.543227, lon: 126.728081}, \\n                          {lat: 37.538084, lon: 126.722601}, {lat: 37.530313, lon: 126.72257},\\n                          {lat: 37.47408104, lon: 126.6213401}, {lat: 37.49416117, lon: 126.5314849}, {lat: 37.49332988, lon: 126.4883439}, {lat: 37.45278277, lon: 126.6282058}, {lat: 37.47444945, lon: 126.6272621},\\n                          {lat: 37.455946717, lon: 126.705586062}, {lat: 37.456085358, lon: 126.706082821}];\\n              }\\n    \\n            function initTmap() {\\n                map = new Tmapv2.Map(\\\"TMapApp\\\", {\\n                    center: new Tmapv2.LatLng(\".concat(middleLat, \", \").concat(middleLng, \"),\\n                    width: \\\"100%\\\",\\n                    height: \\\"100%\\\",\\n                    httpsMode: true,\\n                    zoomControl: false,\\n                    zoom:13,\\n                });\\n\\n                marker_s = new Tmapv2.Marker(\\n                    {\\n                        position : new Tmapv2.LatLng(\").concat(startLat, \", \").concat(startLng, \"),\\n                        icon : \\\"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\\\",\\n                        iconSize : new Tmapv2.Size(24, 38),\\n                        map : map\\n                    });\\n    \\n                // \\uB3C4\\uCC29 \\uB9C8\\uCEE4\\n                marker_e = new Tmapv2.Marker(\\n                    {\\n                        position : new Tmapv2.LatLng(\").concat(endLat, \", \").concat(endLng, \"),\\n                        icon : \\\"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\\\",\\n                        iconSize : new Tmapv2.Size(24, 38),\\n                        map : map\\n                });\\n               \\n                var polyline4;\\n                \\n                console.log(checki);\\n                if(!checki){\\n                    console.log(\\\"\\uADF8\\uAC70 \\uC2DC\\uC791\\uC784@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\\\");\\n                    checki = 10;\\n                    \").concat(setCheck(true), \";\\n                    $.ajax({\\n                    method: \\\"POST\\\",\\n                    url : \\\"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\\\",\\n                    async: false,\\n                    data: {\\n                        \\\"appKey\\\" : \\\"l7xx597ff83932a8455888e5e223d55124e7\\\",\\n\\t\\t\\t\\t\\t\\t\\\"startX\\\" : \\\"\").concat(startLng, \"\\\",\\n\\t\\t\\t\\t\\t\\t\\\"startY\\\" : \\\"\").concat(startLat, \"\\\",\\n\\t\\t\\t\\t\\t\\t\\\"endX\\\" : \\\"\").concat(endLng, \"\\\",\\n\\t\\t\\t\\t\\t\\t\\\"endY\\\" : \\\"\").concat(endLat, \"\\\",\\n\\t\\t\\t\\t\\t\\t\\\"reqCoordType\\\" : \\\"WGS84GEO\\\",\\n\\t\\t\\t\\t\\t\\t\\\"resCoordType\\\" : \\\"EPSG3857\\\",\\n\\t\\t\\t\\t\\t\\t\\\"startName\\\" : \\\"\\uCD9C\\uBC1C\\uC9C0\\\",\\n\\t\\t\\t\\t\\t\\t\\\"endName\\\" : \\\"\\uB3C4\\uCC29\\uC9C0\\\"\\n                    },\\n                    success: function(response){\\n                        var resultData = response.features;\\n\\n                        if (resultdrawArr.length > 0) {\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i in resultdrawArr) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresultdrawArr[i]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.setMap(null);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tresultdrawArr = [];\\n\\t\\t\\t\\t\\t\\t}\\n                        drawInfoArr = [];\\n\\n                        for ( var i in resultData) { //for\\uBB38 [S]\\n\\t\\t\\t\\t\\t\\t\\tvar geometry = resultData[i].geometry;\\n\\t\\t\\t\\t\\t\\t\\tvar properties = resultData[i].properties;\\n\\t\\t\\t\\t\\t\\t\\tvar polyline_;\\n\\n\\n\\t\\t\\t\\t\\t\\t\\tif (geometry.type == \\\"LineString\\\") {\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var j in geometry.coordinates) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\uACBD\\uB85C\\uB4E4\\uC758 \\uACB0\\uACFC\\uAC12(\\uAD6C\\uAC04)\\uB4E4\\uC744 \\uD3EC\\uC778\\uD2B8 \\uAC1D\\uCCB4\\uB85C \\uBCC0\\uD658 \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar latlng = new Tmapv2.Point(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.coordinates[j][0],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.coordinates[j][1]);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\uD3EC\\uC778\\uD2B8 \\uAC1D\\uCCB4\\uB97C \\uBC1B\\uC544 \\uC88C\\uD45C\\uAC12\\uC73C\\uB85C \\uBCC0\\uD658\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlatlng);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\uD3EC\\uC778\\uD2B8\\uAC1D\\uCCB4\\uC758 \\uC815\\uBCF4\\uB85C \\uC88C\\uD45C\\uAC12 \\uBCC0\\uD658 \\uAC1D\\uCCB4\\uB85C \\uC800\\uC7A5\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar convertChange = new Tmapv2.LatLng(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconvertPoint._lat,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconvertPoint._lng);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\uBC30\\uC5F4\\uC5D0 \\uB2F4\\uAE30\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdrawInfoArr.push(convertChange);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar markerImg = \\\"\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\tvar pType = \\\"\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\tvar size;\\n\\t\\t\\t\\t\\t\\t\\n                                if (properties.pointType == \\\"S\\\") { //\\uCD9C\\uBC1C\\uC9C0 \\uB9C8\\uCEE4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmarkerImg = \\\"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpType = \\\"S\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsize = new Tmapv2.Size(24, 38);\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if (properties.pointType == \\\"E\\\") { //\\uB3C4\\uCC29\\uC9C0 \\uB9C8\\uCEE4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmarkerImg = \\\"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpType = \\\"E\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsize = new Tmapv2.Size(24, 38);\\n\\t\\t\\t\\t\\t\\t\\t\\t} else { //\\uAC01 \\uD3EC\\uC778\\uD2B8 \\uB9C8\\uCEE4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmarkerImg = \\\"http://topopen.tmap.co.kr/imgs/point.png\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpType = \\\"P\\\";\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsize = new Tmapv2.Size(8, 8);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// \\uACBD\\uB85C\\uB4E4\\uC758 \\uACB0\\uACFC\\uAC12\\uB4E4\\uC744 \\uD3EC\\uC778\\uD2B8 \\uAC1D\\uCCB4\\uB85C \\uBCC0\\uD658 \\n\\t\\t\\t\\t\\t\\t\\t\\tvar latlon = new Tmapv2.Point(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.coordinates[0],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.coordinates[1]);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// \\uD3EC\\uC778\\uD2B8 \\uAC1D\\uCCB4\\uB97C \\uBC1B\\uC544 \\uC88C\\uD45C\\uAC12\\uC73C\\uB85C \\uB2E4\\uC2DC \\uBCC0\\uD658\\n\\t\\t\\t\\t\\t\\t\\t\\tvar convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlatlon);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar routeInfoObj = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmarkerImage : markerImg,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlng : convertPoint._lng,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlat : convertPoint._lat,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpointType : pType\\n\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Marker \\uCD94\\uAC00\\n\\t\\t\\t\\t\\t\\t\\t\\tmarker_p = new Tmapv2.Marker(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tposition : new Tmapv2.LatLng(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trouteInfoObj.lat,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trouteInfoObj.lng),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticon : routeInfoObj.markerImage,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticonSize : size,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmap : map\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}//for\\uBB38 [E]\\n\\t\\t\\t\\t\\t\\tdrawLine(drawInfoArr);\\n                        polyline4 = new Tmapv2.Polyline({\\n                            path: drawInfoArr,\\n                            strokeColor: \\\"#E00000\\\", // \\uB77C\\uC778 \\uC0C9\\uC0C1\\n                            strokeWeight: 4, // \\uB77C\\uC778 \\uB450\\uAED8\\n                            map: map // \\uC9C0\\uB3C4 \\uAC1D\\uCCB4\\n                        });\\n                    },\\n                    error: function(err){\\n                        console.log(\\\"\\uC5D0\\uB7EC\\uC784\\\");\\n                    }\\n                })\\n            }\\n\\n                return map;\\n            }\\n\\n            function addComma(num) {\\n                var regexp = /B(?=(d{3})+(?!d))/g;\\n                return num.toString().replace(regexp, ',');\\n            }\\n\\n            function drawLine(arrPoint) {\\n                console.log(\\\"\\uB4DC\\uB85C\\uC6B0 \\uC2E4\\uD589\\\");\\n                var polyline_;\\n        \\n                polyline_ = new Tmapv2.Polyline({\\n                    path : arrPoint,\\n                    strokeColor : \\\"#DD0000\\\",\\n                    strokeWeight : 6,\\n                    map : map\\n                });\\n                resultdrawArr.push(polyline_);\\n            }\\n\\n            if(\").concat(both, \"){  \\n                console.log(\\\"both!@@@@!@!@!@!@!@!@!@!@!@!@!@!@\\\");   \\n                if(!checki){\\n                    map = initTmap();\\n                } \\n\\n            }       \\n \\n            if(marker_myl){\\n                marker_myl.setMap(null);\\n            } \\n\\n            var marker_myl = new Tmapv2.Marker({\\n                position : new Tmapv2.LatLng(\").concat(lat, \", \").concat(lng, \"),\\n                icon: \\\"\").concat(mymarker, \"\\\",\\n                iconSize: new Tmapv2.Size(40, 40), \\n                map: map\\n            });\\n\\n            var markers;\\n            if(map && !markers){\\n            $.ajax({                //\\uACC4\\uB2E8 \\uBC1B\\uC544\\uC634\\n              method: \\\"POST\\\",\\n              url: \\\"http://localhost:9000/api/find/stair\\\",\\n              async: false,\\n              data: {\\n      \\n              },\\n              success: function(res){\\n                console.log(res);\\n                if(markers){\\n                  console.log(\\\"\\uB9C8\\uCEE4 \\uC9C0\\uC6CC\\uC57C\\uD574\\\");\\n                  console.log(markers);\\n                  for(var i = 0; i < markers.length; i++){\\n                    markers[i].setMap(null);\\n                  }\\n                  markers = [];\\n                }\\n                markers = [];\\n                \\n                for(var i = 0; i < res.length; i++){\\n                  console.log(\\\"\\uB9C8\\uCEE4\\uC0DD\\uC131\\\");\\n                  var lat = res[i].startlatitude;\\n                  var lng = res[i].startlongitude;\\n      \\n                  var markerone = new Tmapv2.Marker({\\n                    position: new Tmapv2.LatLng(lat, lng),\\n                    icon: \\\"\").concat(stairs, \"\\\",\\n                    iconSize: new Tmapv2.Size(15, 15),\\n                    //map: testmap\\n                  });\\n                  \\n                  markers.push(markerone);\\n                }\\n              },\\n              error: function(err){\\n                console.log(\\\"\\uACC4\\uB2E8 \\uBABB\\uBC1B\\uC544\\uC634\\\");\\n              }\\n            })\\n          }else{\\n            var ck;\\n            if(\").concat(checked, \" && !ck){\\n                ck = true;\\n              for(var i = 0; i < markers.length; i++){\\n                markers[i].setMap(map);\\n              }\\n              markerCluster = new Tmapv2.extension.MarkerCluster({\\n                markers: markers,\\n                // icons: \\\"\").concat(stairs, \"\\\",\\n                map: map\\n              });\\n            }else if(ck && !\").concat(checked, \"){\\n                ck = false;\\n              if(markerCluster){\\n                markerCluster.destroy();\\n              }\\n              for(var i = 0; i < markers.length; i++){\\n                markers[i].setMap(null);\\n              }\\n            }\\n            console.log(markers);\\n      \\n          }\\n          //////////////////////////////////////////////////////////////////////////////////////////////\\n          var wheelmarker;\\n          var wheelmarkers;\\n          if(map && !wheelmarkers && latlon){\\n            wheelmarkers = [];\\n            for(var i = 0; i < 26; i++){\\n              wheelmarker = new Tmapv2.Marker({\\n                position: new Tmapv2.LatLng(latlon[i].lat, latlon[i].lon),\\n                icon: \\\"\").concat(charging, \"\\\",\\n                iconSize: new Tmapv2.Size(15, 15),\\n                // map: map\\n              });\\n    \\n              wheelmarkers.push(wheelmarker);\\n            }\\n          }\\n    \\n          if(wheelmarkers){\\n            var ch;\\n          if(!ch && \").concat(wheelchecked, \"){\\n            ch = true;\\n            for(var i = 0; i < wheelmarkers.length; i++){\\n              wheelmarkers[i].setMap(map);\\n            }\\n          }else if(ch && !\").concat(wheelchecked, \"){\\n            ch = false;\\n            for(var i = 0; i < wheelmarkers.length; i++){\\n              wheelmarkers[i].setMap(null);\\n            }\\n          }\\n        }\\n          //////////////////////////////////////////////////////////////////////////////////////////////\\n \\n        \");\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, [handleSuccess, both, findLocation]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"#D5D5D5\",\n      zIndex: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 9\n    }\n  }, both && /*#__PURE__*/React.createElement(ElevatorAndStair, {\n    onCheck: onCheckedElement,\n    onCheckWheel: onCheckedWheel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 22\n    }\n  }, LIST, onCheckedElement), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    id: \"findwayheader\",\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      margin: \"0px\",\n      display: \"flex\",\n      backgroundColor: \"white\",\n      boxShadow: \"1px 1px 20px 1px gray\",\n      zIndex: \"3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11\",\n    style: {\n      position: \"relative\",\n      textAlign: \"-webkit-left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    style: {\n      border: \"1px solid gray\",\n      borderRadius: \"6px\",\n      margin: \"5px\",\n      marginTop: \"12px\",\n      width: \"100%\"\n    },\n    color: \"black\",\n    placeholder: startplaceholder,\n    location: mylocation,\n    src: '/find-search',\n    id: 'start',\n    endPlace: endPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    style: {\n      border: \"1px solid gray\",\n      borderRadius: \"6px\",\n      margin: \"5px\",\n      marginBottom: \"12px\",\n      width: \"100%\"\n    },\n    placeholder: endplaceholder,\n    location: mylocation,\n    src: '/find-search',\n    id: 'end',\n    startPlace: startPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    style: {\n      alignSelf: \"flex-start\",\n      marginTop: \"5px\",\n      padding: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      left: \"-3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"bi bi-x\",\n    onClick: handleXButton,\n    style: {\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 25\n    }\n  }))), both && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      padding: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"walkbtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: walk,\n    style: {\n      width: \"16px\",\n      height: \"24px\",\n      marginRight: \"8px\",\n      marginBottom: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 42\n    }\n  }), \"\\uB3C4\\uBCF4\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"walkbtn\",\n    onClick: handleTransButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bus,\n    style: {\n      width: \"24px\",\n      height: \"24px\",\n      marginRight: \"8px\",\n      marginBottom: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 70\n    }\n  }), \"\\uB300\\uC911\\uAD50\\uD1B5\"))), both && /*#__PURE__*/React.createElement(\"body\", {\n    onload: \"initTmap();\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"TMapApp\",\n    style: {\n      overflowY: \"hidden\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SideBar, {\n    totalDistance: totalDistance,\n    totalTime: totalTime,\n    start: startPlace,\n    end: endPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }\n  }, routeDetail)), /*#__PURE__*/React.createElement(UrlModal, {\n    open: modalOpen,\n    close: closeModal,\n    connect: urlModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default FindWay;","map":{"version":3,"names":["React","useState","useEffect","axios","$","useLocation","proj4","UrlModal","SearchBar","SideBar","ElevatorAndStair","walk","bus","mymarker","stairs","charging","baseurl","FindWay","props","findLocation","setFindLocation","mylat","setMyLat","mylon","setMyLon","startplaceholder","setStartPlaceHolder","endplaceholder","setEndPlaceHolder","present","setPresent","startPlace","setStartPlace","endPlace","setEndPlace","both","setBoth","findway","setFindway","route","setRoute","routeDetail","setRouteDetail","totalDistance","setTotalDistance","totalTime","setTotalTime","mtest","setMTest","checked","setChecked","check","setCheck","wheelchecked","setWheelChecked","onCheckedElement","item","onCheckedWheel","LIST","id","data","src","cid","location","mylocation","state","handleSuccess","pos","coords","latitude","longitude","reverseGeocoding","console","log","modalOpen","setModalOpen","openMadal","setTimeout","closeModal","urlModal","start","end","name","includes","obj","upperBizName","split","TmapfindTrans","TmapfindWay","startlng","startlat","endlng","endlat","fw","create","baseURL","post","params","startX","startY","endX","endY","startName","endName","option","then","res","catch","err","startname","endname","tft","sName","eName","window","open","lat","lon","rG","mystartlocation","i","map","index","pointIndex","pointDescription","startBuilding","endBuilding","navigator","geolocation","getCurrentPosition","besseltm","wgs84","posx","posy","address","pt","Point","result","y","x","handleXButton","href","handleTransButton","watchPosition","startLat","startLng","endLat","endLng","middleLat","middleLng","lng","script","document","createElement","innerHTML","type","async","head","appendChild","position","width","height","backgroundColor","zIndex","margin","display","boxShadow","textAlign","border","borderRadius","marginTop","marginBottom","alignSelf","padding","left","fontSize","marginRight","overflowY"],"sources":["C:/Users/201810938/Desktop/lastMap/TrafficMap/mapfront/src/pages/FindWay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport { useLocation } from 'react-router';\r\nimport proj4 from 'proj4';\r\nimport '../css/FindWay.css'\r\n\r\nimport UrlModal from '../components/UrlModal';\r\nimport SearchBar from '../components/SearchBar';\r\nimport SideBar from '../components/SideBar';\r\nimport ElevatorAndStair from \"../components/ElevatorAndStair\";\r\n\r\nimport walk from \"../images/walkp.png\";\r\nimport bus from \"../images/bus.png\";\r\nimport mymarker from \"../images/mylocation.png\";\r\nimport stairs from \"../images/stairs.png\";\r\nimport charging from \"../images/charging_station_icon.png\"\r\n\r\n\r\nconst baseurl = 'http://localhost:9000/'         //베이스 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n\r\nfunction FindWay(props){\r\n    const [findLocation, setFindLocation] = useState();\r\n    const [mylat, setMyLat] = useState();\r\n    const [mylon, setMyLon] = useState();\r\n    const [startplaceholder, setStartPlaceHolder] = useState('출발지 입력');\r\n    const [endplaceholder, setEndPlaceHolder] = useState('도착지 입력');\r\n\r\n    const [present, setPresent] = useState();\r\n    const [startPlace, setStartPlace] = useState();\r\n    const [endPlace, setEndPlace] = useState();\r\n    const [both, setBoth] = useState(false);\r\n\r\n    const [findway, setFindway] = useState();\r\n    const [route, setRoute] = useState();\r\n    const [routeDetail, setRouteDetail] = useState([]);\r\n    const [totalDistance, setTotalDistance] = useState();\r\n    const [totalTime, setTotalTime] = useState();\r\n\r\n    const [mtest, setMTest] = useState(true);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [check, setCheck] = useState(false);\r\n    const [wheelchecked, setWheelChecked] = useState(false);\r\n\r\n    const onCheckedElement = (checked, item) => {\r\n      if(checked){\r\n        setChecked(true);\r\n      }else if(!checked){\r\n        setChecked(false);\r\n      }\r\n    };\r\n    const onCheckedWheel = (wheelchecked, item) => {\r\n        if(wheelchecked){\r\n          setWheelChecked(true);\r\n        }else if(!wheelchecked){\r\n          setWheelChecked(false);\r\n        }\r\n    };\r\n\r\n    const LIST = [\r\n        {id: 0, data: '엘리베이터', src: stairs, cid: \"chk1\"},\r\n        {id: 1, data: '계단', src: stairs, cid: \"chk2\"},\r\n      ];\r\n\r\n    const location = useLocation();\r\n\r\n    const mylocation = location.state.mylocation;\r\n\r\n    const handleSuccess = (pos) => {                //현재 내 위치 받아오기\r\n        const {latitude, longitude } = pos.coords;\r\n\r\n        if(!startPlace){\r\n            reverseGeocoding(latitude, longitude);\r\n        }else{\r\n            console.log(startPlace);\r\n            console.log(findLocation);\r\n        }\r\n        setMyLat(latitude);\r\n        setMyLon(longitude);\r\n\r\n        setFindLocation({\r\n          latitude, longitude\r\n        })\r\n    };\r\n\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const openMadal = () => {\r\n        setTimeout(setModalOpen(true), 50);\r\n    }\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n    }\r\n    const urlModal = () => {\r\n        var start, end;\r\n        if((startPlace.name).includes('역') && startPlace.obj.upperBizName === '교통편의'){\r\n            start = (startPlace.name).split('역')[0] + '역';\r\n        }else{\r\n            start = startPlace.name;\r\n        }\r\n        if((endPlace.name).includes('역') && endPlace.obj.upperBizName === '교통편의'){\r\n            end = (endPlace.name).split('역')[0] + '역';\r\n        }else{\r\n            end = endPlace.name;\r\n        }\r\n        TmapfindTrans(start, end);\r\n        closeModal();\r\n    }\r\n\r\n    const TmapfindWay = (startlng, startlat, endlng, endlat) => {   //길찾기\r\n        setMTest(false);\r\n        const fw = axios.create({\r\n            baseURL: baseurl\r\n        })\r\n        fw.post('/api/way', null, {params: {\r\n            startX : startlng, startY : startlat, endX : endlng, endY : endlat, startName : \"출발지\", endName : \"도착지\", option : '0'\r\n        }}).then(function(res){\r\n            setRoute(res.data);\r\n        }).catch(function(err){\r\n            console.log(\"길찾기 실패\");\r\n        })\r\n    };\r\n\r\n    const TmapfindTrans = (startname, endname) => {     //대중교통 길찾기 url\r\n        const tft = axios.create({\r\n            baseURL: baseurl\r\n        })\r\n        tft.post('/api/way/trans', null, {params: {\r\n            sName: startname, eName: endname\r\n        }}).then(function(res){\r\n            window.open(res.data, '_blank');\r\n        }).catch(function(err){\r\n            window.open('https://map.kakao.com/', '_blank');\r\n            console.log(\"대중교통 길찾기 실패\");\r\n        })\r\n    }\r\n    const reverseGeocoding = (lat, lon) => {        //좌표를 주소로 변환\r\n        const rG = axios.create({\r\n            baseURL: baseurl\r\n        })\r\n        rG.post('/api/find/reverseGeo', null, {params: {\r\n            lat: lat, lon: lon\r\n        }}).then(function(res){\r\n            setStartPlaceHolder(res.data);\r\n            setStartPlace({name: res.data, obj: {latitude: lat, longitude: lon}})\r\n        }).catch(function(err){\r\n            console.log(\"지오코딩 실패\");\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(location.state.mystartlocation){\r\n            console.log(location.state.mystartlocation);\r\n            setStartPlaceHolder(location.state.mystartlocation);\r\n            setStartPlace({name: location.state.mystartlocation, obj: {latitude: location.state.mylocation.latitude, longitude: location.state.mylocation.longitude}})\r\n        }else{\r\n            console.log(\"없어\");\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(route);\r\n        var i = 0;\r\n        if(route){\r\n            route.map((obj, index)=>{\r\n                if(index==0){\r\n                    setTotalDistance(obj.totalDistance);\r\n                    setTotalTime(obj.totalTime);\r\n                }\r\n                if(obj.pointIndex == i){\r\n                    setRouteDetail(routeDetail => [...routeDetail, obj.pointDescription]);\r\n                    i++;\r\n                }\r\n            })\r\n        }\r\n    }, [route])\r\n\r\n    useEffect(()=>{\r\n        console.log(location.state);\r\n        setFindway(location.state);\r\n\r\n        \r\n        \r\n        if(location.state){\r\n            if(location.state.startBuilding){\r\n                console.log(\"출발지 정보 왔어요\");\r\n                setStartPlace(location.state.startBuilding);            //출발지 정보\r\n                setStartPlaceHolder(location.state.startBuilding.name);  //출발지 이름\r\n            }\r\n            if(location.state.endBuilding){    \r\n                console.log(\"도착지 정보 왔어요\");\r\n                setEndPlace(location.state.endBuilding);              //도착지 정보\r\n                setEndPlaceHolder(location.state.endBuilding.name);   //도착지 이름\r\n            }  \r\n            // if(location.state.startBuilding && location.state.endBuilding){\r\n            if(startPlace && endPlace){\r\n                navigator.geolocation.getCurrentPosition(handleSuccess);\r\n                var startlat, startlng, endlat, endlng;\r\n                const besseltm = \"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\"\r\n                const wgs84 = \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\" \r\n                var posx, posy;\r\n                console.log(\"출발지, 도착지 둘 다 입력 완료\");\r\n                console.log(startPlace);\r\n                console.log(endPlace);   \r\n                setBoth(true);\r\n                if(startPlace.address === '버스정류장'){\r\n                    posx = startPlace.obj.posx;\r\n                    posy = startPlace.obj.posy;\r\n                    var pt = new proj4.Point(posx, posy);\r\n                    var result = proj4(besseltm, wgs84, pt);\r\n                    console.log(result);\r\n                    startlat = result.y;\r\n                    startlng = result.x;\r\n                }else{\r\n                    startlat = startPlace.obj.latitude;\r\n                    startlng = startPlace.obj.longitude;\r\n                }\r\n                if(endPlace.address === '버스정류장'){\r\n                    posx = endPlace.obj.posx;\r\n                    posy = endPlace.obj.posy;\r\n                    var pt = new proj4.Point(posx, posy);\r\n                    var result = proj4(besseltm, wgs84, pt);\r\n                    console.log(result);\r\n                    endlat = result.y;\r\n                    endlng = result.x;\r\n                }else{\r\n                    endlat = endPlace.obj.latitude;\r\n                    endlng = endPlace.obj.longitude;\r\n                }\r\n                if(mtest){\r\n                    TmapfindWay(startlng, startlat, endlng, endlat);\r\n                }\r\n            }\r\n        }\r\n    }, [startPlace, endPlace, mtest])\r\n///////////////////////////////////////////\r\n//////////////////////////////////////////\r\n    const handleXButton =   () => {\r\n        console.log(\"클릭\");\r\n        window.location.href = \"/\";\r\n        // TmapfindWay();\r\n        // TmapfindTrans();\r\n    }\r\n\r\n    const handleTransButton = () => {\r\n        openMadal();\r\n    }\r\n\r\n    \r\n  useEffect(()=>{\r\n    navigator.geolocation.watchPosition(handleSuccess);\r\n\r\n  }, [])\r\n\r\n    useEffect(()=>{\r\n        var startLat, startLng;\r\n        var endLat, endLng;\r\n        var middleLat, middleLng;\r\n        var posx, posy;\r\n        const besseltm = \"+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs +towgs84=-115.80,474.99,674.11,1.16,-2.31,-1.63,6.43\"\r\n        const wgs84 = \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\" \r\n\r\n        navigator.geolocation.getCurrentPosition(handleSuccess);\r\n\r\n        if(findLocation){\r\n            console.log(\"있다!\");\r\n            var lat = findLocation.latitude;\r\n            var lng = findLocation.longitude;\r\n        }\r\n        \r\n        if(both){\r\n            if(startPlace.address === '버스정류장'){\r\n                posx = startPlace.obj.posx;\r\n                posy = startPlace.obj.posy;\r\n                var pt = new proj4.Point(posx, posy);\r\n                var result = proj4(besseltm, wgs84, pt);\r\n                console.log(result);\r\n                startLat = result.y;\r\n                startLng = result.x;\r\n            }else{\r\n                startLat = startPlace.obj.latitude;\r\n                startLng = startPlace.obj.longitude;\r\n            }\r\n            if(endPlace.address === '버스정류장'){\r\n                posx = endPlace.obj.posx;\r\n                posy = endPlace.obj.posy;\r\n                var pt = new proj4.Point(posx, posy);\r\n                var result = proj4(besseltm, wgs84, pt);\r\n                console.log(result);\r\n                endLat = result.y;\r\n                endLng = result.x;\r\n            }else{\r\n                endLat = endPlace.obj.latitude;\r\n                endLng = endPlace.obj.longitude;\r\n            }\r\n            \r\n            middleLat = (startLat + endLat) / 2;\r\n            middleLng = (startLng + endLng) / 2;\r\n\r\n            console.log(middleLat, middleLng);\r\n\r\n        }\r\n\r\n        const script = document.createElement(\"script\");\r\n        script.innerHTML = `\r\n            var map;\r\n            var marker_s, marker_e, marker_p1, marker_p2;\r\n            var totalMarkerArr = [];\r\n            var drawInfoArr = [];\r\n            var resultdrawArr = [];\r\n            var checki;\r\n            var marker_myl;\r\n            var markerCluster;\r\n\r\n            var latlon;\r\n\r\n            if(!latlon){\r\n                latlon = [{lat: 37.44738908, lon: 126.7306811}, {lat: 37.44765055, lon: 126.7124925}, {lat: 37.45611315, lon: 126.7133538}, {lat: 37.46398002, lon: 126.710947}, {lat: 37.46611111, lon: 126.714686}, {lat: 37.467324, lon: 126.699152},\r\n                          {lat: 37.4613873, lon: 126.7311568}, {lat: 37.43588036, lon: 126.7473614}, {lat: 37.42791756, lon: 126.7507057}, {lat: 37.43010131, lon: 126.7159454}, {lat: 37.40422829, lon: 126.7163979}, {lat: 37.39776762, lon: 126.7263901},\r\n                          {lat: 37.44789883, lon: 126.7370578}, {lat: 37.39176155, lon: 126.7217373}, {lat: 37.42468926, lon: 126.7533209}, {lat: 37.45514557, lon: 126.701585}, {lat: 37.44854249, lon: 126.7530631}, {lat: 37.45587968, lon: 126.7195142},\r\n                          {lat: 37.4574194, lon: 126.7023421}, {lat: 37.45688086, lon: 126.7013016}, {lat: 37.46964954, lon: 126.7081713}, {lat: 37.44944591, lon: 126.7011633}, {lat: 37.45678003, lon: 126.7104966}, {lat: 37.45521033, lon: 126.7315437},\r\n                          {lat: 37.44817192, lon: 126.7366364}, {lat: 37.43963366, lon: 126.7598083}, \r\n                          {lat: 37.53264131, lon: 126.6441471}, {lat: 37.52641513, lon: 126.6705158}, {lat: 37.56441872, lon: 126.673601}, {lat: 37.54899846, lon: 126.6782282}, {lat: 37.53265854, lon: 126.6537394}, {lat: 37.52509167, lon: 126.6801348}, \r\n                          {lat: 37.51554696, lon: 126.6778363}, {lat: 37.51460915, lon: 126.6722848}, {lat: 37.51118138, lon: 126.6747559}, {lat: 37.50250466, lon: 126.6746007}, {lat: 37.50820266, lon: 126.6782976}, {lat: 37.49434393, lon: 126.672588},\r\n                          {lat: 37.49085455, lon: 126.6848496}, {lat: 37.49250983, lon: 126.6800417}, {lat: 37.48748624, lon: 126.683403}, {lat: 37.60508357, lon: 126.6618003}, {lat: 37.59507709, lon: 126.7017045}, {lat: 37.59210015, lon: 126.6746255}, \r\n                          {lat: 37.59496672, lon: 126.6279671}, {lat: 37.59439292, lon: 126.6405824}, {lat: 37.60167498, lon: 126.6564585}, {lat: 37.5977252, lon: 126.667137}, {lat: 37.59293488, lon: 126.6731833}, {lat: 37.58496948, lon: 126.6759831}, \r\n                          {lat: 37.56876146, lon: 126.6754722}, {lat: 37.56122795, lon: 126.6775452}, {lat: 37.55133706, lon: 126.6770966}, {lat: 37.54395416, lon: 126.6768454}, {lat: 37.52470809, lon: 126.6752851}, {lat: 37.51757789, lon: 126.6768399563},\r\n                          {lat: 37.5070671, lon: 126.6762537}, {lat: 37.50025173, lon: 126.6758537}, {lat: 37.49007763, lon: 126.6752728}, {lat: 37.48412624, lon: 126.6838511}, {lat: 37.47416837, lon: 126.6814437},\r\n                          {lat: 37.537442, lon: 126.737759}, {lat: 37.532424, lon: 126.7121}, {lat: 37.525051, lon: 126.709819}, {lat: 37.539606, lon: 126.72135}, {lat: 37.54421, lon: 126.72814}, {lat: 37.537759, lon: 126.728978}, \r\n                          {lat: 37.530757, lon: 126.729686}, {lat: 37.532912, lon: 126.723909}, {lat: 37.528104, lon: 126.73642}, {lat: 37.548144, lon: 126.741451}, {lat: 37.561578, lon: 126.754899}, {lat: 37.545278, lon: 126.717463}, \r\n                          {lat: 37.571645, lon: 126.736023}, {lat: 37.566414, lon: 126.742647}, {lat: 37.553578, lon: 126.744932}, {lat: 37.545062, lon: 126.738621}, {lat: 37.534507, lon: 126.741707}, {lat: 37.57709, lon: 126.733483}, \r\n                          {lat: 37.547444, lon: 126.727095}, {lat: 37.543628, lon: 126.715609}, {lat: 37.550132, lon: 126.741986}, {lat: 37.526032, lon: 126.750287}, {lat: 37.529235, lon: 126.715001}, {lat: 37.543227, lon: 126.728081}, \r\n                          {lat: 37.538084, lon: 126.722601}, {lat: 37.530313, lon: 126.72257},\r\n                          {lat: 37.47408104, lon: 126.6213401}, {lat: 37.49416117, lon: 126.5314849}, {lat: 37.49332988, lon: 126.4883439}, {lat: 37.45278277, lon: 126.6282058}, {lat: 37.47444945, lon: 126.6272621},\r\n                          {lat: 37.455946717, lon: 126.705586062}, {lat: 37.456085358, lon: 126.706082821}];\r\n              }\r\n    \r\n            function initTmap() {\r\n                map = new Tmapv2.Map(\"TMapApp\", {\r\n                    center: new Tmapv2.LatLng(${middleLat}, ${middleLng}),\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    httpsMode: true,\r\n                    zoomControl: false,\r\n                    zoom:13,\r\n                });\r\n\r\n                marker_s = new Tmapv2.Marker(\r\n                    {\r\n                        position : new Tmapv2.LatLng(${startLat}, ${startLng}),\r\n                        icon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\r\n                        iconSize : new Tmapv2.Size(24, 38),\r\n                        map : map\r\n                    });\r\n    \r\n                // 도착 마커\r\n                marker_e = new Tmapv2.Marker(\r\n                    {\r\n                        position : new Tmapv2.LatLng(${endLat}, ${endLng}),\r\n                        icon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\r\n                        iconSize : new Tmapv2.Size(24, 38),\r\n                        map : map\r\n                });\r\n               \r\n                var polyline4;\r\n                \r\n                console.log(checki);\r\n                if(!checki){\r\n                    console.log(\"그거 시작임@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\r\n                    checki = 10;\r\n                    ${setCheck(true)};\r\n                    $.ajax({\r\n                    method: \"POST\",\r\n                    url : \"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\",\r\n                    async: false,\r\n                    data: {\r\n                        \"appKey\" : \"l7xx597ff83932a8455888e5e223d55124e7\",\r\n\t\t\t\t\t\t\"startX\" : \"${startLng}\",\r\n\t\t\t\t\t\t\"startY\" : \"${startLat}\",\r\n\t\t\t\t\t\t\"endX\" : \"${endLng}\",\r\n\t\t\t\t\t\t\"endY\" : \"${endLat}\",\r\n\t\t\t\t\t\t\"reqCoordType\" : \"WGS84GEO\",\r\n\t\t\t\t\t\t\"resCoordType\" : \"EPSG3857\",\r\n\t\t\t\t\t\t\"startName\" : \"출발지\",\r\n\t\t\t\t\t\t\"endName\" : \"도착지\"\r\n                    },\r\n                    success: function(response){\r\n                        var resultData = response.features;\r\n\r\n                        if (resultdrawArr.length > 0) {\r\n\t\t\t\t\t\t\tfor ( var i in resultdrawArr) {\r\n\t\t\t\t\t\t\t\tresultdrawArr[i]\r\n\t\t\t\t\t\t\t\t\t\t.setMap(null);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresultdrawArr = [];\r\n\t\t\t\t\t\t}\r\n                        drawInfoArr = [];\r\n\r\n                        for ( var i in resultData) { //for문 [S]\r\n\t\t\t\t\t\t\tvar geometry = resultData[i].geometry;\r\n\t\t\t\t\t\t\tvar properties = resultData[i].properties;\r\n\t\t\t\t\t\t\tvar polyline_;\r\n\r\n\r\n\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\r\n\t\t\t\t\t\t\t\tfor ( var j in geometry.coordinates) {\r\n\t\t\t\t\t\t\t\t\t// 경로들의 결과값(구간)들을 포인트 객체로 변환 \r\n\t\t\t\t\t\t\t\t\tvar latlng = new Tmapv2.Point(\r\n\t\t\t\t\t\t\t\t\t\t\tgeometry.coordinates[j][0],\r\n\t\t\t\t\t\t\t\t\t\t\tgeometry.coordinates[j][1]);\r\n\t\t\t\t\t\t\t\t\t// 포인트 객체를 받아 좌표값으로 변환\r\n\t\t\t\t\t\t\t\t\tvar convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\r\n\t\t\t\t\t\t\t\t\t\t\tlatlng);\r\n\t\t\t\t\t\t\t\t\t// 포인트객체의 정보로 좌표값 변환 객체로 저장\r\n\t\t\t\t\t\t\t\t\tvar convertChange = new Tmapv2.LatLng(\r\n\t\t\t\t\t\t\t\t\t\t\tconvertPoint._lat,\r\n\t\t\t\t\t\t\t\t\t\t\tconvertPoint._lng);\r\n\t\t\t\t\t\t\t\t\t// 배열에 담기\r\n\t\t\t\t\t\t\t\t\tdrawInfoArr.push(convertChange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar markerImg = \"\";\r\n\t\t\t\t\t\t\t\tvar pType = \"\";\r\n\t\t\t\t\t\t\t\tvar size;\r\n\t\t\t\t\t\t\r\n                                if (properties.pointType == \"S\") { //출발지 마커\r\n\t\t\t\t\t\t\t\t\tmarkerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\r\n\t\t\t\t\t\t\t\t\tpType = \"S\";\r\n\t\t\t\t\t\t\t\t\tsize = new Tmapv2.Size(24, 38);\r\n\t\t\t\t\t\t\t\t} else if (properties.pointType == \"E\") { //도착지 마커\r\n\t\t\t\t\t\t\t\t\tmarkerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\r\n\t\t\t\t\t\t\t\t\tpType = \"E\";\r\n\t\t\t\t\t\t\t\t\tsize = new Tmapv2.Size(24, 38);\r\n\t\t\t\t\t\t\t\t} else { //각 포인트 마커\r\n\t\t\t\t\t\t\t\t\tmarkerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\r\n\t\t\t\t\t\t\t\t\tpType = \"P\";\r\n\t\t\t\t\t\t\t\t\tsize = new Tmapv2.Size(8, 8);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// 경로들의 결과값들을 포인트 객체로 변환 \r\n\t\t\t\t\t\t\t\tvar latlon = new Tmapv2.Point(\r\n\t\t\t\t\t\t\t\t\t\tgeometry.coordinates[0],\r\n\t\t\t\t\t\t\t\t\t\tgeometry.coordinates[1]);\r\n\r\n\t\t\t\t\t\t\t\t// 포인트 객체를 받아 좌표값으로 다시 변환\r\n\t\t\t\t\t\t\t\tvar convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\r\n\t\t\t\t\t\t\t\t\t\tlatlon);\r\n\r\n\t\t\t\t\t\t\t\tvar routeInfoObj = {\r\n\t\t\t\t\t\t\t\t\tmarkerImage : markerImg,\r\n\t\t\t\t\t\t\t\t\tlng : convertPoint._lng,\r\n\t\t\t\t\t\t\t\t\tlat : convertPoint._lat,\r\n\t\t\t\t\t\t\t\t\tpointType : pType\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t// Marker 추가\r\n\t\t\t\t\t\t\t\tmarker_p = new Tmapv2.Marker(\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tposition : new Tmapv2.LatLng(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trouteInfoObj.lat,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trouteInfoObj.lng),\r\n\t\t\t\t\t\t\t\t\t\t\ticon : routeInfoObj.markerImage,\r\n\t\t\t\t\t\t\t\t\t\t\ticonSize : size,\r\n\t\t\t\t\t\t\t\t\t\t\tmap : map\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}//for문 [E]\r\n\t\t\t\t\t\tdrawLine(drawInfoArr);\r\n                        polyline4 = new Tmapv2.Polyline({\r\n                            path: drawInfoArr,\r\n                            strokeColor: \"#E00000\", // 라인 색상\r\n                            strokeWeight: 4, // 라인 두께\r\n                            map: map // 지도 객체\r\n                        });\r\n                    },\r\n                    error: function(err){\r\n                        console.log(\"에러임\");\r\n                    }\r\n                })\r\n            }\r\n\r\n                return map;\r\n            }\r\n\r\n            function addComma(num) {\r\n                var regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n                return num.toString().replace(regexp, ',');\r\n            }\r\n\r\n            function drawLine(arrPoint) {\r\n                console.log(\"드로우 실행\");\r\n                var polyline_;\r\n        \r\n                polyline_ = new Tmapv2.Polyline({\r\n                    path : arrPoint,\r\n                    strokeColor : \"#DD0000\",\r\n                    strokeWeight : 6,\r\n                    map : map\r\n                });\r\n                resultdrawArr.push(polyline_);\r\n            }\r\n\r\n            if(${both}){  \r\n                console.log(\"both!@@@@!@!@!@!@!@!@!@!@!@!@!@!@\");   \r\n                if(!checki){\r\n                    map = initTmap();\r\n                } \r\n\r\n            }       \r\n \r\n            if(marker_myl){\r\n                marker_myl.setMap(null);\r\n            } \r\n\r\n            var marker_myl = new Tmapv2.Marker({\r\n                position : new Tmapv2.LatLng(${lat}, ${lng}),\r\n                icon: \"${mymarker}\",\r\n                iconSize: new Tmapv2.Size(40, 40), \r\n                map: map\r\n            });\r\n\r\n            var markers;\r\n            if(map && !markers){\r\n            $.ajax({                //계단 받아옴\r\n              method: \"POST\",\r\n              url: \"http://localhost:9000/api/find/stair\",\r\n              async: false,\r\n              data: {\r\n      \r\n              },\r\n              success: function(res){\r\n                console.log(res);\r\n                if(markers){\r\n                  console.log(\"마커 지워야해\");\r\n                  console.log(markers);\r\n                  for(var i = 0; i < markers.length; i++){\r\n                    markers[i].setMap(null);\r\n                  }\r\n                  markers = [];\r\n                }\r\n                markers = [];\r\n                \r\n                for(var i = 0; i < res.length; i++){\r\n                  console.log(\"마커생성\");\r\n                  var lat = res[i].startlatitude;\r\n                  var lng = res[i].startlongitude;\r\n      \r\n                  var markerone = new Tmapv2.Marker({\r\n                    position: new Tmapv2.LatLng(lat, lng),\r\n                    icon: \"${stairs}\",\r\n                    iconSize: new Tmapv2.Size(15, 15),\r\n                    //map: testmap\r\n                  });\r\n                  \r\n                  markers.push(markerone);\r\n                }\r\n              },\r\n              error: function(err){\r\n                console.log(\"계단 못받아옴\");\r\n              }\r\n            })\r\n          }else{\r\n            var ck;\r\n            if(${checked} && !ck){\r\n                ck = true;\r\n              for(var i = 0; i < markers.length; i++){\r\n                markers[i].setMap(map);\r\n              }\r\n              markerCluster = new Tmapv2.extension.MarkerCluster({\r\n                markers: markers,\r\n                // icons: \"${stairs}\",\r\n                map: map\r\n              });\r\n            }else if(ck && !${checked}){\r\n                ck = false;\r\n              if(markerCluster){\r\n                markerCluster.destroy();\r\n              }\r\n              for(var i = 0; i < markers.length; i++){\r\n                markers[i].setMap(null);\r\n              }\r\n            }\r\n            console.log(markers);\r\n      \r\n          }\r\n          //////////////////////////////////////////////////////////////////////////////////////////////\r\n          var wheelmarker;\r\n          var wheelmarkers;\r\n          if(map && !wheelmarkers && latlon){\r\n            wheelmarkers = [];\r\n            for(var i = 0; i < 26; i++){\r\n              wheelmarker = new Tmapv2.Marker({\r\n                position: new Tmapv2.LatLng(latlon[i].lat, latlon[i].lon),\r\n                icon: \"${charging}\",\r\n                iconSize: new Tmapv2.Size(15, 15),\r\n                // map: map\r\n              });\r\n    \r\n              wheelmarkers.push(wheelmarker);\r\n            }\r\n          }\r\n    \r\n          if(wheelmarkers){\r\n            var ch;\r\n          if(!ch && ${wheelchecked}){\r\n            ch = true;\r\n            for(var i = 0; i < wheelmarkers.length; i++){\r\n              wheelmarkers[i].setMap(map);\r\n            }\r\n          }else if(ch && !${wheelchecked}){\r\n            ch = false;\r\n            for(var i = 0; i < wheelmarkers.length; i++){\r\n              wheelmarkers[i].setMap(null);\r\n            }\r\n          }\r\n        }\r\n          //////////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n        `;\r\n        script.type = \"text/javascript\";\r\n        script.async = \"async\";\r\n        document.head.appendChild(script);\r\n    }, [handleSuccess, both, findLocation]);\r\n\r\n\r\n    return(\r\n        <div style={{position: \"fixed\", width: \"100%\", height: \"100%\", backgroundColor: \"#D5D5D5\", zIndex: \"0\"}}>\r\n\r\n            {both && <ElevatorAndStair onCheck={onCheckedElement} onCheckWheel={onCheckedWheel}>{LIST}{onCheckedElement}</ElevatorAndStair>}\r\n\r\n            <div className= \"row align-items-center\" id=\"findwayheader\" style={{position: \"relative\", width: \"100%\", margin: \"0px\", display: \"flex\"\r\n                , backgroundColor: \"white\", boxShadow: \"1px 1px 20px 1px gray\", zIndex: \"3\"}}>\r\n                <div className='col-11' style={{position: \"relative\", textAlign: \"-webkit-left\"}}>\r\n                    <SearchBar style={{border: \"1px solid gray\", borderRadius: \"6px\", margin: \"5px\", marginTop: \"12px\", width: \"100%\", }} color=\"black\" placeholder={startplaceholder} location={mylocation} src={'/find-search'} id={'start'} endPlace={endPlace}></SearchBar>\r\n                    <SearchBar style={{border: \"1px solid gray\", borderRadius: \"6px\", margin: \"5px\", marginBottom: \"12px\",  width: \"100%\", }} placeholder={endplaceholder} location={mylocation} src={'/find-search'} id={'end'} startPlace={startPlace}></SearchBar>\r\n                </div>\r\n                <div className=\"col-1\" style={{alignSelf: \"flex-start\", marginTop: \"5px\", padding: \"0px\"}}>\r\n                    <div style={{display: \"flex\", left: \"-3px\"}}>\r\n                        <i class=\"bi bi-x\" onClick={handleXButton} style={{fontSize: \"2rem\"}}></i>\r\n                    </div>                               \r\n                </div>\r\n                {both && \r\n                <div style={{width: \"100%\", padding: \"0px\"}}>\r\n                    <button id=\"walkbtn\"><img src={walk} style={{width: \"16px\", height: \"24px\", marginRight: \"8px\", marginBottom: \"2px\"}}></img>도보</button>\r\n                    <button id=\"walkbtn\" onClick={handleTransButton}><img src={bus} style={{width: \"24px\", height: \"24px\", marginRight: \"8px\", marginBottom: \"2px\"}}></img>대중교통</button>\r\n                </div>\r\n                }\r\n            </div>\r\n            {both &&\r\n            <body onload=\"initTmap();\">\r\n            <div id=\"TMapApp\" style={{\r\n                overflowY: \"hidden\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n              }}>\r\n                \r\n            </div>\r\n            <SideBar totalDistance={totalDistance} totalTime={totalTime} start={startPlace} end={endPlace}>{routeDetail}</SideBar>\r\n            </body>}\r\n            <UrlModal open={modalOpen} close={closeModal} connect={urlModal}>  \r\n            </UrlModal>\r\n            \r\n        </div>     \r\n    );\r\n}\r\nexport default FindWay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}