{"ast":null,"code":"function getLocation() {\n  if (navigator.geolocation) {\n    // GPS를 지원하면\n    return new Promise(function (resolve) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        console.info();\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, function (error) {\n        console.error(error);\n        resolve({\n          latitude: 37.3595704,\n          longitude: 127.105399\n        });\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: 0,\n        timeout: Infinity\n      });\n    }).then(function (coords) {\n      //console.log(`coords:${JSON.stringify(coords)}`);\n      return coords;\n    });\n  }\n\n  console.info('GPS를 지원하지 않습니다');\n  return {\n    latitude: 37.3595704,\n    longitude: 127.105399\n  };\n}\n\nexport default getLocation;","map":{"version":3,"names":["getLocation","navigator","geolocation","Promise","resolve","getCurrentPosition","position","console","info","latitude","coords","longitude","error","enableHighAccuracy","maximumAge","timeout","Infinity","then"],"sources":["C:/Users/201810938/Desktop/lastMap/TrafficMap/mapfront/src/getLocation.js"],"sourcesContent":["function getLocation() {\r\n  if (navigator.geolocation) {\r\n    // GPS를 지원하면\r\n    return new Promise(resolve => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        function(position) {\r\n          console.info(\r\n            //`re:${position.coords.latitude} ${position.coords.longitude}`,\r\n          );\r\n          resolve({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n          });\r\n        },\r\n        function(error) {\r\n          console.error(error);\r\n          resolve({\r\n            latitude: 37.3595704,\r\n            longitude: 127.105399,\r\n          });\r\n        },\r\n        {\r\n          enableHighAccuracy: false,\r\n          maximumAge: 0,\r\n          timeout: Infinity,\r\n        },\r\n      );\r\n    }).then(coords => {\r\n      //console.log(`coords:${JSON.stringify(coords)}`);\r\n      return coords;\r\n    });\r\n  }\r\n  console.info('GPS를 지원하지 않습니다');\r\n  return {\r\n    latitude: 37.3595704,\r\n    longitude: 127.105399,\r\n  };\r\n}\r\n\r\n  export default getLocation;"],"mappings":"AAAA,SAASA,WAAT,GAAuB;EACrB,IAAIC,SAAS,CAACC,WAAd,EAA2B;IACzB;IACA,OAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;MAC5BH,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CACE,UAASC,QAAT,EAAmB;QACjBC,OAAO,CAACC,IAAR;QAGAJ,OAAO,CAAC;UACNK,QAAQ,EAAEH,QAAQ,CAACI,MAAT,CAAgBD,QADpB;UAENE,SAAS,EAAEL,QAAQ,CAACI,MAAT,CAAgBC;QAFrB,CAAD,CAAP;MAID,CATH,EAUE,UAASC,KAAT,EAAgB;QACdL,OAAO,CAACK,KAAR,CAAcA,KAAd;QACAR,OAAO,CAAC;UACNK,QAAQ,EAAE,UADJ;UAENE,SAAS,EAAE;QAFL,CAAD,CAAP;MAID,CAhBH,EAiBE;QACEE,kBAAkB,EAAE,KADtB;QAEEC,UAAU,EAAE,CAFd;QAGEC,OAAO,EAAEC;MAHX,CAjBF;IAuBD,CAxBM,EAwBJC,IAxBI,CAwBC,UAAAP,MAAM,EAAI;MAChB;MACA,OAAOA,MAAP;IACD,CA3BM,CAAP;EA4BD;;EACDH,OAAO,CAACC,IAAR,CAAa,gBAAb;EACA,OAAO;IACLC,QAAQ,EAAE,UADL;IAELE,SAAS,EAAE;EAFN,CAAP;AAID;;AAEC,eAAeX,WAAf"},"metadata":{},"sourceType":"module"}